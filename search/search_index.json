{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"USM Lap","text":"<p>Laptime simulator built by the University of Strathclyde Motorsport team.</p>"},{"location":"autoapi/summary/","title":"Summary","text":"<ul> <li>usmlap<ul> <li>__main__</li> <li>datatypes</li> <li>utils<ul> <li>geometry</li> <li>proportion</li> </ul> </li> <li>vehicle<ul> <li>brakes</li> <li>common</li> <li>steering</li> <li>suspension</li> <li>transmission</li> <li>tyre<ul> <li>tir</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"autoapi/usmlap/","title":"usmlap","text":""},{"location":"autoapi/usmlap/__main__/","title":"__main__","text":""},{"location":"autoapi/usmlap/datatypes/","title":"datatypes","text":""},{"location":"autoapi/usmlap/utils/","title":"utils","text":""},{"location":"autoapi/usmlap/utils/geometry/","title":"geometry","text":""},{"location":"autoapi/usmlap/utils/proportion/","title":"proportion","text":"<p>This module contains utility functions for working with proportions.</p>"},{"location":"autoapi/usmlap/utils/proportion/#usmlap.utils.proportion.normalise","title":"<code>normalise(values)</code>","text":"<p>Normalise a tuple of values.</p> <p>Values retain their relative proportions, but sum to 1.</p> <p>Parameters:</p> Name Type Description Default <code>values</code> <code>tuple[float, float]</code> <p>Tuple of values</p> required <p>Returns:</p> Name Type Description <code>normalised_values</code> <code>tuple[float, float]</code> <p>Tuple of normalised values</p> Source code in <code>src\\usmlap\\utils\\proportion.py</code> <pre><code>def normalise(values: tuple[float, ...]):\n    \"\"\"\n    Normalise a tuple of values.\n\n    Values retain their relative proportions, but sum to 1.\n\n    Args:\n        values (tuple[float, float]): Tuple of values\n\n    Returns:\n        normalised_values (tuple[float, float]): Tuple of normalised values\n    \"\"\"\n    total = sum(values)\n    return tuple(v / total for v in values)\n</code></pre>"},{"location":"autoapi/usmlap/utils/proportion/#usmlap.utils.proportion.split","title":"<code>split(total, proportions)</code>","text":"<p>Split a value proportionally</p> <p>Parameters:</p> Name Type Description Default <code>total</code> <code>float</code> <p>Total value</p> required <code>proportions</code> <code>tuple[float, ...]</code> <p>List of proportions</p> required <p>Returns:</p> Name Type Description <code>split_value</code> <code>tuple[float, ...]</code> <p>Total split proportionally according to proportions</p> Source code in <code>src\\usmlap\\utils\\proportion.py</code> <pre><code>def split(total: float, proportions: tuple[float, ...]):\n    \"\"\"\n    Split a value proportionally\n\n    Args:\n        total (float): Total value\n        proportions (tuple[float, ...]): List of proportions\n\n    Returns:\n        split_value (tuple[float, ...]):\n            Total split proportionally according to proportions\n    \"\"\"\n    return tuple(p * total / sum(proportions) for p in proportions)\n</code></pre>"},{"location":"autoapi/usmlap/utils/proportion/#usmlap.utils.proportion.with_complement","title":"<code>with_complement(proportion)</code>","text":"<p>Get a tuple containing a proportion and its complement</p> <p>Parameters:</p> Name Type Description Default <code>proportion</code> <code>float</code> <p>Value between 0 and 1</p> required <p>Returns:</p> Name Type Description <code>proportion_with_complement</code> <code>tuple[float, float]</code> <p>Tuple of proportion and (1 - proportion)</p> Source code in <code>src\\usmlap\\utils\\proportion.py</code> <pre><code>def with_complement(proportion: float) -&gt; tuple[float, float]:\n    \"\"\"\n    Get a tuple containing a proportion and its complement\n\n    Args:\n        proportion (float): Value between 0 and 1\n\n    Returns:\n        proportion_with_complement (tuple[float, float]):\n            Tuple of proportion and (1 - proportion)\n    \"\"\"\n    complement = 1 - proportion\n    return proportion, complement\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/","title":"vehicle","text":""},{"location":"autoapi/usmlap/vehicle/brakes/","title":"brakes","text":"<p>This module models the brake system of a vehicle.</p>"},{"location":"autoapi/usmlap/vehicle/brakes/#usmlap.vehicle.brakes.BrakeCaliper","title":"<code>BrakeCaliper</code>","text":"<p>               Bases: <code>Subsystem</code></p> <p>The brake caliper, transmitting force from the brake line to the wheel.</p> <p>Attributes:</p> Name Type Description <code>piston_count</code> <code>int</code> <p>The number of pistons in the caliper</p> <code>piston_diameter</code> <code>float</code> <p>The diameter of the piston</p> <code>piston_area</code> <code>float</code> <p>The total area of the pistons</p> Source code in <code>src\\usmlap\\vehicle\\brakes.py</code> <pre><code>class BrakeCaliper(Subsystem):\n    \"\"\"\n    The brake caliper, transmitting force from the brake line to the wheel.\n\n    Attributes:\n        piston_count (int): The number of pistons in the caliper\n        piston_diameter (float): The diameter of the piston\n        piston_area (float): The total area of the pistons\n    \"\"\"\n\n    piston_count: PositiveInt\n    piston_diameter: Annotated[PositiveFloat, Unit(\"m\")]\n\n    @property\n    def piston_area(self) -&gt; float:\n        return self.piston_count * geometry.area_of_circle(self.piston_diameter)\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/brakes/#usmlap.vehicle.brakes.BrakeDisc","title":"<code>BrakeDisc</code>","text":"<p>               Bases: <code>Subsystem</code></p> <p>The brake disc attached to the wheel.</p> <p>Attributes:</p> Name Type Description <code>outer_diameter</code> <code>float</code> <p>The outer diameter of the brake disc</p> Source code in <code>src\\usmlap\\vehicle\\brakes.py</code> <pre><code>class BrakeDisc(Subsystem):\n    \"\"\"\n    The brake disc attached to the wheel.\n\n    Attributes:\n        outer_diameter (float): The outer diameter of the brake disc\n    \"\"\"\n\n    outer_diameter: Annotated[PositiveFloat, Unit(\"m\")]\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/brakes/#usmlap.vehicle.brakes.BrakeLine","title":"<code>BrakeLine</code>","text":"<p>               Bases: <code>Subsystem</code></p> <p>An individual brake line.</p> <p>Attributes:</p> Name Type Description <code>cylinder</code> <code>MasterCylinder</code> <p>The master cylinder attached to the pedal</p> <code>caliper</code> <code>BrakeCaliper</code> <p>The brake caliper attached to the wheel</p> <code>disc</code> <code>BrakeDisc</code> <p>The brake disc attached to the wheel</p> <code>pad</code> <code>BrakePad</code> <p>The brake pad attached to the caliper</p> Source code in <code>src\\usmlap\\vehicle\\brakes.py</code> <pre><code>class BrakeLine(Subsystem):\n    \"\"\"\n    An individual brake line.\n\n    Attributes:\n        cylinder (MasterCylinder): The master cylinder attached to the pedal\n        caliper (BrakeCaliper): The brake caliper attached to the wheel\n        disc (BrakeDisc): The brake disc attached to the wheel\n        pad (BrakePad): The brake pad attached to the caliper\n    \"\"\"\n\n    cylinder: MasterCylinder\n    caliper: BrakeCaliper\n    disc: BrakeDisc\n    pad: BrakePad\n\n    @property\n    def _area_scaling_factor(self) -&gt; float:\n        \"\"\"The force scaling factor between the cylinder and caliper.\"\"\"\n        return self.caliper.piston_area / self.cylinder.piston_area\n\n    @property\n    def _effective_radius(self) -&gt; float:\n        \"\"\"The radius at which the braking force is applied to the wheel.\"\"\"\n        return 0.5 * (self.disc.outer_diameter - self.pad.height)\n\n    @property\n    def _force_to_torque_scaling_factor(self) -&gt; float:\n        \"\"\"The ratio between braking torque and master cylinder force.\"\"\"\n        return (\n            self._area_scaling_factor\n            * self.pad.coefficient_of_friction\n            * self._effective_radius\n        )\n\n    def get_brake_pressure(self, cylinder_force: float) -&gt; float:\n        \"\"\"\n        Calculate the pressure of the brake fluid.\n\n        Args:\n            cylinder_force (float): Force applied to the master cylinder\n\n        Returns:\n            brake_pressure (float): Gauge pressure of the brake fluid\n        \"\"\"\n        return cylinder_force / self.cylinder.piston_area\n\n    def force_to_torque(self, cylinder_force: float) -&gt; float:\n        \"\"\"\n        Calculate the braking torque applied to the wheel.\n\n        Args:\n            cylinder_force (float): Force applied to the master cylinder\n\n        Returns:\n            braking_torque (float): Torque applied to the wheel\n        \"\"\"\n        return cylinder_force * self._force_to_torque_scaling_factor\n\n    def torque_to_force(self, braking_torque: float) -&gt; float:\n        \"\"\"\n        Calculate the force required to apply a torque to the wheel.\n\n        Args:\n            braking_torque (float): Braking torque required on the wheel\n\n        Returns:\n            cylinder_force (float): Force required on the master cylinder\n        \"\"\"\n        return braking_torque / self._force_to_torque_scaling_factor\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/brakes/#usmlap.vehicle.brakes.BrakeLine.force_to_torque","title":"<code>force_to_torque(cylinder_force)</code>","text":"<p>Calculate the braking torque applied to the wheel.</p> <p>Parameters:</p> Name Type Description Default <code>cylinder_force</code> <code>float</code> <p>Force applied to the master cylinder</p> required <p>Returns:</p> Name Type Description <code>braking_torque</code> <code>float</code> <p>Torque applied to the wheel</p> Source code in <code>src\\usmlap\\vehicle\\brakes.py</code> <pre><code>def force_to_torque(self, cylinder_force: float) -&gt; float:\n    \"\"\"\n    Calculate the braking torque applied to the wheel.\n\n    Args:\n        cylinder_force (float): Force applied to the master cylinder\n\n    Returns:\n        braking_torque (float): Torque applied to the wheel\n    \"\"\"\n    return cylinder_force * self._force_to_torque_scaling_factor\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/brakes/#usmlap.vehicle.brakes.BrakeLine.get_brake_pressure","title":"<code>get_brake_pressure(cylinder_force)</code>","text":"<p>Calculate the pressure of the brake fluid.</p> <p>Parameters:</p> Name Type Description Default <code>cylinder_force</code> <code>float</code> <p>Force applied to the master cylinder</p> required <p>Returns:</p> Name Type Description <code>brake_pressure</code> <code>float</code> <p>Gauge pressure of the brake fluid</p> Source code in <code>src\\usmlap\\vehicle\\brakes.py</code> <pre><code>def get_brake_pressure(self, cylinder_force: float) -&gt; float:\n    \"\"\"\n    Calculate the pressure of the brake fluid.\n\n    Args:\n        cylinder_force (float): Force applied to the master cylinder\n\n    Returns:\n        brake_pressure (float): Gauge pressure of the brake fluid\n    \"\"\"\n    return cylinder_force / self.cylinder.piston_area\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/brakes/#usmlap.vehicle.brakes.BrakeLine.torque_to_force","title":"<code>torque_to_force(braking_torque)</code>","text":"<p>Calculate the force required to apply a torque to the wheel.</p> <p>Parameters:</p> Name Type Description Default <code>braking_torque</code> <code>float</code> <p>Braking torque required on the wheel</p> required <p>Returns:</p> Name Type Description <code>cylinder_force</code> <code>float</code> <p>Force required on the master cylinder</p> Source code in <code>src\\usmlap\\vehicle\\brakes.py</code> <pre><code>def torque_to_force(self, braking_torque: float) -&gt; float:\n    \"\"\"\n    Calculate the force required to apply a torque to the wheel.\n\n    Args:\n        braking_torque (float): Braking torque required on the wheel\n\n    Returns:\n        cylinder_force (float): Force required on the master cylinder\n    \"\"\"\n    return braking_torque / self._force_to_torque_scaling_factor\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/brakes/#usmlap.vehicle.brakes.BrakePad","title":"<code>BrakePad</code>","text":"<p>               Bases: <code>Subsystem</code></p> <p>The brake pad attached to the caliper.</p> <p>Attributes:</p> Name Type Description <code>height</code> <code>float</code> <p>The height of the brake pad</p> <code>coefficient_of_friction</code> <code>float</code> <p>The coefficient of friction between the brake pad and brake disc</p> Source code in <code>src\\usmlap\\vehicle\\brakes.py</code> <pre><code>class BrakePad(Subsystem):\n    \"\"\"\n    The brake pad attached to the caliper.\n\n    Attributes:\n        height (float): The height of the brake pad\n        coefficient_of_friction (float):\n            The coefficient of friction between the brake pad and brake disc\n    \"\"\"\n\n    height: Annotated[PositiveFloat, Unit(\"m\")]\n    coefficient_of_friction: PositiveFloat\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/brakes/#usmlap.vehicle.brakes.Brakes","title":"<code>Brakes</code>","text":"<p>               Bases: <code>Subsystem</code></p> <p>The brake system of the vehicle.</p> <p>Attributes:</p> Name Type Description <code>front</code> <code>BrakeLine</code> <p>Brake line for the front wheels</p> <code>rear</code> <code>BrakeLine</code> <p>Brake line for the rear wheels</p> <code>pedal_ratio</code> <code>float</code> <p>Ratio of master cylinder force to pedal force</p> <code>front_brake_bias</code> <code>float</code> <p>Proportion of force applied to the front master cylinder (value between 0 and 1)</p> <code>regen_torque</code> <code>float</code> <p>Maximum regenerative braking torque</p> Source code in <code>src\\usmlap\\vehicle\\brakes.py</code> <pre><code>class Brakes(Subsystem):\n    \"\"\"\n    The brake system of the vehicle.\n\n    Attributes:\n        front (BrakeLine): Brake line for the front wheels\n        rear (BrakeLine): Brake line for the rear wheels\n        pedal_ratio (float): Ratio of master cylinder force to pedal force\n        front_brake_bias (float): Proportion of force applied to the front master cylinder (value between 0 and 1)\n        regen_torque (float): Maximum regenerative braking torque\n    \"\"\"\n\n    front: BrakeLine\n    rear: BrakeLine\n    pedal_ratio: PositiveFloat\n    front_brake_bias: Percentage\n    regen_torque: Annotated[PositiveFloat, Unit(\"Nm\")]\n\n    @property\n    def brake_bias(self) -&gt; FrontRear[float]:\n        \"\"\"Tuple of brake biases for the front and rear wheels.\"\"\"\n        return FrontRear(proportion.with_complement(self.front_brake_bias))\n\n    @property\n    def brake_lines(self) -&gt; FrontRear[BrakeLine]:\n        \"\"\"Tuple of front and rear brake lines.\"\"\"\n        return FrontRear((self.front, self.rear))\n\n    def _get_front_brake_balance(self) -&gt; float:\n        front_multiplier = self.front.force_to_torque(1)\n        rear_multiplier = self.rear.force_to_torque(1)\n        return front_multiplier / (front_multiplier + rear_multiplier)\n\n    def _get_cylinder_forces(self, pedal_force: float) -&gt; FrontRear[float]:\n        \"\"\"\n        Get the force applied to the front and rear master cylinders.\n\n        Args:\n            pedal_force (float): Force applied to the pedal\n\n        Returns:\n            cylinder_forces (FrontRear[float]):\n                Force applied to the master cylinders\n        \"\"\"\n        total_force = pedal_force * self.pedal_ratio\n        return FrontRear([total_force * bias for bias in self.brake_bias])\n\n    def pedal_force_to_wheel_torque(\n        self, pedal_force: float\n    ) -&gt; FrontRear[float]:\n        cylinder_forces = self._get_cylinder_forces(pedal_force)\n        return FrontRear(\n            brake_line.force_to_torque(force)\n            for brake_line, force in zip(self.brake_lines, cylinder_forces)\n        )\n\n    def get_overall_brake_balance(self) -&gt; FrontRear[float]:\n        torques = self.pedal_force_to_wheel_torque(1)\n        return FrontRear(proportion.normalise(torques))\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/brakes/#usmlap.vehicle.brakes.Brakes.brake_bias","title":"<code>brake_bias</code>  <code>property</code>","text":"<p>Tuple of brake biases for the front and rear wheels.</p>"},{"location":"autoapi/usmlap/vehicle/brakes/#usmlap.vehicle.brakes.Brakes.brake_lines","title":"<code>brake_lines</code>  <code>property</code>","text":"<p>Tuple of front and rear brake lines.</p>"},{"location":"autoapi/usmlap/vehicle/brakes/#usmlap.vehicle.brakes.MasterCylinder","title":"<code>MasterCylinder</code>","text":"<p>               Bases: <code>Component</code></p> <p>The master cylinder, transmitting force from the pedal to the brake line.</p> <p>Attributes:</p> Name Type Description <code>piston_diameter</code> <code>float</code> <p>The diameter of the piston</p> <code>colour</code> <code>str</code> <p>The colour of the master cylinder</p> <code>piston_area</code> <code>float</code> <p>The area of the piston</p> Source code in <code>src\\usmlap\\vehicle\\brakes.py</code> <pre><code>class MasterCylinder(Component):\n    \"\"\"\n    The master cylinder, transmitting force from the pedal to the brake line.\n\n    Attributes:\n        piston_diameter (float): The diameter of the piston\n        colour (str): The colour of the master cylinder\n        piston_area (float): The area of the piston\n    \"\"\"\n\n    piston_diameter: Annotated[PositiveFloat, Unit(\"m\")]\n    colour: str\n\n    @property\n    def piston_area(self) -&gt; float:\n        return geometry.area_of_circle(self.piston_diameter)\n\n    @classmethod\n    def library_name(cls) -&gt; str:\n        return \"master_cylinders.json\"\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/common/","title":"common","text":""},{"location":"autoapi/usmlap/vehicle/steering/","title":"steering","text":"<p>This module models the steering system of a vehicle.</p>"},{"location":"autoapi/usmlap/vehicle/steering/#usmlap.vehicle.steering.Steering","title":"<code>Steering</code>","text":"<p>               Bases: <code>Subsystem</code></p> <p>The steering system of the vehicle.</p> <p>Attributes:</p> Name Type Description <code>steering_ratio</code> <code>float</code> <p>The ratio of steering angle to wheel angle. A steering ratio of 5 means that for every 5 degrees the steering wheel is rotated, the wheels rotate 1 degree</p> <code>steering_wheel_radius</code> <code>float</code> <p>The radius of the steering wheel</p> Source code in <code>src\\usmlap\\vehicle\\steering.py</code> <pre><code>class Steering(Subsystem):\n    \"\"\"\n    The steering system of the vehicle.\n\n    Attributes:\n        steering_ratio (float): The ratio of steering angle to wheel angle.\n            A steering ratio of 5 means that for every 5 degrees the steering wheel is rotated, the wheels rotate 1 degree\n        steering_wheel_radius (float): The radius of the steering wheel\n    \"\"\"\n\n    steering_ratio: PositiveFloat\n    steering_wheel_radius: Annotated[PositiveFloat, Unit(\"m\")]\n\n    def get_steering_wheel_angle(self, wheel_angle: float) -&gt; float:\n        \"\"\"\n        Calculate the steering wheel angle required for a given wheel angle.\n\n        Args:\n            wheel_angle (float): Angular displacement of the wheel from static (clockwise positive)\n\n        Returns:\n            steering_wheel_angle (float): Angular displacement of the steering wheel from neutral (clockwise positive)\n        \"\"\"\n        return wheel_angle * self.steering_ratio\n\n    def get_wheel_angle(self, steering_wheel_angle: float) -&gt; float:\n        \"\"\"\n        Calculate the wheel angle for a given steering angle.\n\n        Args:\n            steering_wheel_angle (float): Angular displacement of the steering wheel from neutral (clockwise positive)\n\n        Returns:\n            wheel_angle (float): Angular displacement of the wheels from static (clockwise positive)\n        \"\"\"\n        return steering_wheel_angle / self.steering_ratio\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/steering/#usmlap.vehicle.steering.Steering.get_steering_wheel_angle","title":"<code>get_steering_wheel_angle(wheel_angle)</code>","text":"<p>Calculate the steering wheel angle required for a given wheel angle.</p> <p>Parameters:</p> Name Type Description Default <code>wheel_angle</code> <code>float</code> <p>Angular displacement of the wheel from static (clockwise positive)</p> required <p>Returns:</p> Name Type Description <code>steering_wheel_angle</code> <code>float</code> <p>Angular displacement of the steering wheel from neutral (clockwise positive)</p> Source code in <code>src\\usmlap\\vehicle\\steering.py</code> <pre><code>def get_steering_wheel_angle(self, wheel_angle: float) -&gt; float:\n    \"\"\"\n    Calculate the steering wheel angle required for a given wheel angle.\n\n    Args:\n        wheel_angle (float): Angular displacement of the wheel from static (clockwise positive)\n\n    Returns:\n        steering_wheel_angle (float): Angular displacement of the steering wheel from neutral (clockwise positive)\n    \"\"\"\n    return wheel_angle * self.steering_ratio\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/steering/#usmlap.vehicle.steering.Steering.get_wheel_angle","title":"<code>get_wheel_angle(steering_wheel_angle)</code>","text":"<p>Calculate the wheel angle for a given steering angle.</p> <p>Parameters:</p> Name Type Description Default <code>steering_wheel_angle</code> <code>float</code> <p>Angular displacement of the steering wheel from neutral (clockwise positive)</p> required <p>Returns:</p> Name Type Description <code>wheel_angle</code> <code>float</code> <p>Angular displacement of the wheels from static (clockwise positive)</p> Source code in <code>src\\usmlap\\vehicle\\steering.py</code> <pre><code>def get_wheel_angle(self, steering_wheel_angle: float) -&gt; float:\n    \"\"\"\n    Calculate the wheel angle for a given steering angle.\n\n    Args:\n        steering_wheel_angle (float): Angular displacement of the steering wheel from neutral (clockwise positive)\n\n    Returns:\n        wheel_angle (float): Angular displacement of the wheels from static (clockwise positive)\n    \"\"\"\n    return steering_wheel_angle / self.steering_ratio\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/suspension/","title":"suspension","text":"<p>This module models the suspension of a vehicle.</p>"},{"location":"autoapi/usmlap/vehicle/suspension/#usmlap.vehicle.suspension.Suspension","title":"<code>Suspension</code>","text":"<p>               Bases: <code>Subsystem</code></p> <p>The suspension system of a vehicle.</p> <p>Attributes:</p> Name Type Description <code>front</code> <code>SuspensionAxle</code> <p>Front axle suspension</p> <code>rear</code> <code>SuspensionAxle</code> <p>Rear axle suspension</p> <code>wheelbase</code> <code>float</code> <p>The distance between the front and rear wheels, measured between contact patches</p> <code>front_track_width</code> <code>float</code> <p>The width of the front track, measured between contact patches</p> <code>rear_track_width</code> <code>float</code> <p>The width of the rear track, measured between contact patches</p> <code>centre_of_gravity_height</code> <code>float</code> <p>The height of the centre of gravity above the ground plane</p> Source code in <code>src\\usmlap\\vehicle\\suspension.py</code> <pre><code>class Suspension(Subsystem):\n    \"\"\"\n    The suspension system of a vehicle.\n\n    Attributes:\n        front (SuspensionAxle): Front axle suspension\n        rear (SuspensionAxle): Rear axle suspension\n        wheelbase (float): The distance between the front and rear wheels, measured between contact patches\n        front_track_width (float): The width of the front track, measured between contact patches\n        rear_track_width (float): The width of the rear track, measured between contact patches\n        centre_of_gravity_height (float): The height of the centre of gravity above the ground plane\n    \"\"\"\n\n    front: SuspensionAxle\n    rear: SuspensionAxle\n    wheelbase: Annotated[PositiveFloat, Unit(\"m\")]\n    front_track_width: Annotated[PositiveFloat, Unit(\"m\")]\n    rear_track_width: Annotated[PositiveFloat, Unit(\"m\")]\n    centre_of_gravity_height: Annotated[PositiveFloat, Unit(\"m\")]\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/transmission/","title":"transmission","text":"<p>This module models the transmission of a vehicle.</p>"},{"location":"autoapi/usmlap/vehicle/transmission/#usmlap.vehicle.transmission.Transmission","title":"<code>Transmission</code>","text":"<p>               Bases: <code>Subsystem</code></p> <p>The transmission of the vehicle.</p> <p>Transmits power from the motor to the wheels.</p> <p>Attributes:</p> Name Type Description <code>primary_gear_reduction</code> <code>float</code> <p>The reduction of the primary gear</p> <code>final_gear_reduction</code> <code>float</code> <p>The reduction of the final gear</p> <code>gear_ratio</code> <code>list[float]</code> <p>The ratios of the gears</p> Source code in <code>src\\usmlap\\vehicle\\transmission.py</code> <pre><code>class Transmission(Subsystem):\n    \"\"\"\n    The transmission of the vehicle.\n\n    Transmits power from the motor to the wheels.\n\n    Attributes:\n        primary_gear_reduction (float): The reduction of the primary gear\n        final_gear_reduction (float): The reduction of the final gear\n        gear_ratio (list[float]): The ratios of the gears\n    \"\"\"\n\n    primary_gear_reduction: PositiveFloat\n    final_gear_reduction: PositiveFloat\n    gear_ratio: Annotated[list[PositiveFloat], MinLen(1)]\n\n    @property\n    def overall_gear_ratio(self) -&gt; list[float]:\n        gear_reduction = self.primary_gear_reduction * self.final_gear_reduction\n        return [gear_reduction * ratio for ratio in self.gear_ratio]\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/tyre/","title":"tyre","text":""},{"location":"autoapi/usmlap/vehicle/tyre/tir/","title":"tir","text":"<p>This module provides support for reading tyre data from .TIR files.</p> <p>The .TIR file format specifies a wide range of tyre parameters which can be used in the Pacejka Magic Formula.</p> <p>Documentation for the .TIR file format is available at https://functionbay.com/documentation/onlinehelp/Documents/Tire/MFTyre-MFSwift_Help.pdf, in section 5.3.</p> <p>The following repositories have been used as a starting point for this module:</p> <ul> <li> <p>Tire Dynamics (Python):     https://github.com/JyNing04/Pacejka-tire-model/tree/main</p> </li> <li> <p>Magic Formula Tyre Library (MATLAB):     https://github.com/teasit/magic-formula-tyre-library/tree/main</p> </li> </ul> <p>TODO: Currently, most parameters are marked as <code>Optional[float]</code>. This is due to different requirements for different versions of the Magic Formula. Once I better understand these requirements, many of these parameters will be marked as <code>float</code>.</p>"},{"location":"autoapi/usmlap/vehicle/tyre/tir/#usmlap.vehicle.tyre.tir.AligningCoefficients","title":"<code>AligningCoefficients</code>","text":"<p>               Bases: <code>_ParameterGroup</code></p> <p>Coefficients for evaluating self-aligning moment, Mz.</p> <p>Attributes:</p> Name Type Description <code>QBZ1</code> <code>Optional[float]</code> <p>Trail slope factor for trail Bpt at Fznom.</p> <code>QBZ2</code> <code>Optional[float]</code> <p>Variation of slope Bpt with load.</p> <code>QBZ3</code> <code>Optional[float]</code> <p>Variation of slope Bpt with load squared.</p> <code>QBZ4</code> <code>Optional[float]</code> <p>Variation of slope Bpt with camber.</p> <code>QBZ5</code> <code>Optional[float]</code> <p>Variation of slope Bpt with absolute camber.</p> <code>QBZ9</code> <code>Optional[float]</code> <p>Slope factor Br of residual torque Mzr.</p> <code>QBZ10</code> <code>Optional[float]</code> <p>Slope factor Br of residual torque Mzr.</p> <code>QCZ1</code> <code>Optional[float]</code> <p>Shape factor Cpt for pneumatic trail.</p> <code>QDZ1</code> <code>Optional[float]</code> <p>Peak trail Dpt = Dpt(Fz/FznomR0).</p> <code>QDZ2</code> <code>Optional[float]</code> <p>Variation of peak Dpt with load.</p> <code>QDZ3</code> <code>Optional[float]</code> <p>Variation of peak Dpt with camber.</p> <code>QDZ4</code> <code>Optional[float]</code> <p>Variation of peak Dpt with camber squared.</p> <code>QDZ6</code> <code>Optional[float]</code> <p>Peak residual torque Dmr = Dmr/(Fz*R0).</p> <code>QDZ7</code> <code>Optional[float]</code> <p>Variation of peak factor Dmr with load.</p> <code>QDZ8</code> <code>Optional[float]</code> <p>Variation of peak factor Dmr with camber.</p> <code>QDZ9</code> <code>Optional[float]</code> <p>Variation of peak factor Dmr with camber and load.</p> <code>QDZ10</code> <code>Optional[float]</code> <p>Variation of peak factor Dmr with camber squared.</p> <code>QDZ11</code> <code>Optional[float]</code> <p>Variation of Dmr with camber squared and load.</p> <code>QEZ1</code> <code>Optional[float]</code> <p>Trail curvature Ept at Fznom.</p> <code>QEZ2</code> <code>Optional[float]</code> <p>Variation of curvature Ept with load.</p> <code>QEZ3</code> <code>Optional[float]</code> <p>Variation of curvature Ept with load squared.</p> <code>QEZ4</code> <code>Optional[float]</code> <p>Variation of curvature Ept with sign of Alpha-t.</p> <code>QEZ5</code> <code>Optional[float]</code> <p>Variation of Ept with camber and sign Alpha-t.</p> <code>QHZ1</code> <code>Optional[float]</code> <p>Trail horizontal shift Sht at Fznom.</p> <code>QHZ2</code> <code>Optional[float]</code> <p>Variation of shift Sht with load.</p> <code>QHZ3</code> <code>Optional[float]</code> <p>Variation of shift Sht with camber.</p> <code>QHZ4</code> <code>Optional[float]</code> <p>Variation of shift Sht with camber and load.</p> <code>SSZ1</code> <code>Optional[float]</code> <p>Nominal value of s/R0: effect of Fx on Mz.</p> <code>SSZ2</code> <code>Optional[float]</code> <p>Variation of distance s/R0 with Fy/Fznom.</p> <code>SSZ3</code> <code>Optional[float]</code> <p>Variation of distance s/R0 with camber.</p> <code>SSZ4</code> <code>Optional[float]</code> <p>Variation of distance s/R0 with load and camber.</p> <code>PPZ1</code> <code>Optional[float]</code> <p>Linear pressure effect on pneumatic trail.</p> <code>PPZ2</code> <code>Optional[float]</code> <p>Influence of inflation pressure on residual aligning torque.</p> Source code in <code>src\\usmlap\\vehicle\\tyre\\tir.py</code> <pre><code>class AligningCoefficients(_ParameterGroup):\n    \"\"\"\n    Coefficients for evaluating self-aligning moment, Mz.\n\n    Attributes:\n        QBZ1 (Optional[float]):\n            Trail slope factor for trail Bpt at Fznom.\n        QBZ2 (Optional[float]):\n            Variation of slope Bpt with load.\n        QBZ3 (Optional[float]):\n            Variation of slope Bpt with load squared.\n        QBZ4 (Optional[float]):\n            Variation of slope Bpt with camber.\n        QBZ5 (Optional[float]):\n            Variation of slope Bpt with absolute camber.\n        QBZ9 (Optional[float]):\n            Slope factor Br of residual torque Mzr.\n        QBZ10 (Optional[float]):\n            Slope factor Br of residual torque Mzr.\n        QCZ1 (Optional[float]):\n            Shape factor Cpt for pneumatic trail.\n        QDZ1 (Optional[float]):\n            Peak trail Dpt = Dpt*(Fz/Fznom*R0).\n        QDZ2 (Optional[float]):\n            Variation of peak Dpt with load.\n        QDZ3 (Optional[float]):\n            Variation of peak Dpt with camber.\n        QDZ4 (Optional[float]):\n            Variation of peak Dpt with camber squared.\n        QDZ6 (Optional[float]):\n            Peak residual torque Dmr = Dmr/(Fz*R0).\n        QDZ7 (Optional[float]):\n            Variation of peak factor Dmr with load.\n        QDZ8 (Optional[float]):\n            Variation of peak factor Dmr with camber.\n        QDZ9 (Optional[float]):\n            Variation of peak factor Dmr with camber and load.\n        QDZ10 (Optional[float]):\n            Variation of peak factor Dmr with camber squared.\n        QDZ11 (Optional[float]):\n            Variation of Dmr with camber squared and load.\n        QEZ1 (Optional[float]):\n            Trail curvature Ept at Fznom.\n        QEZ2 (Optional[float]):\n            Variation of curvature Ept with load.\n        QEZ3 (Optional[float]):\n            Variation of curvature Ept with load squared.\n        QEZ4 (Optional[float]):\n            Variation of curvature Ept with sign of Alpha-t.\n        QEZ5 (Optional[float]):\n            Variation of Ept with camber and sign Alpha-t.\n        QHZ1 (Optional[float]):\n            Trail horizontal shift Sht at Fznom.\n        QHZ2 (Optional[float]):\n            Variation of shift Sht with load.\n        QHZ3 (Optional[float]):\n            Variation of shift Sht with camber.\n        QHZ4 (Optional[float]):\n            Variation of shift Sht with camber and load.\n        SSZ1 (Optional[float]):\n            Nominal value of s/R0: effect of Fx on Mz.\n        SSZ2 (Optional[float]):\n            Variation of distance s/R0 with Fy/Fznom.\n        SSZ3 (Optional[float]):\n            Variation of distance s/R0 with camber.\n        SSZ4 (Optional[float]):\n            Variation of distance s/R0 with load and camber.\n        PPZ1 (Optional[float]):\n            Linear pressure effect on pneumatic trail.\n        PPZ2 (Optional[float]):\n            Influence of inflation pressure on residual aligning torque.\n    \"\"\"\n\n    QBZ1: Optional[float] = None\n    QBZ2: Optional[float] = None\n    QBZ3: Optional[float] = None\n    QBZ4: Optional[float] = None\n    QBZ5: Optional[float] = None\n    QBZ9: Optional[float] = None\n    QBZ10: Optional[float] = None\n    QCZ1: Optional[float] = None\n    QDZ1: Optional[float] = None\n    QDZ2: Optional[float] = None\n    QDZ3: Optional[float] = None\n    QDZ4: Optional[float] = None\n    QDZ6: Optional[float] = None\n    QDZ7: Optional[float] = None\n    QDZ8: Optional[float] = None\n    QDZ9: Optional[float] = None\n    QDZ10: Optional[float] = None\n    QDZ11: Optional[float] = None\n    QEZ1: Optional[float] = None\n    QEZ2: Optional[float] = None\n    QEZ3: Optional[float] = None\n    QEZ4: Optional[float] = None\n    QEZ5: Optional[float] = None\n    QHZ1: Optional[float] = None\n    QHZ2: Optional[float] = None\n    QHZ3: Optional[float] = None\n    QHZ4: Optional[float] = None\n    SSZ1: Optional[float] = None\n    SSZ2: Optional[float] = None\n    SSZ3: Optional[float] = None\n    SSZ4: Optional[float] = None\n    PPZ1: Optional[float] = None\n    PPZ2: Optional[float] = None\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/tyre/tir/#usmlap.vehicle.tyre.tir.ContactPatch","title":"<code>ContactPatch</code>","text":"<p>               Bases: <code>_ParameterGroup</code></p> <p>Contact length and obstacle enveloping parameters.</p> <p>Attributes:</p> Name Type Description <code>Q_RA1</code> <code>Optional[float]</code> <p>Square root term in contact length equation.</p> <code>Q_RA2</code> <code>Optional[float]</code> <p>Linear term in contact length equation.</p> <code>Q_RB1</code> <code>Optional[float]</code> <p>Root term in contact width equation.</p> <code>Q_RB2</code> <code>Optional[float]</code> <p>Linear term in contact width equation.</p> <code>ELLIPS_SHIFT</code> <code>Optional[float]</code> <p>Scaling of distance between front and rear ellipsoid.</p> <code>ELLIPS_LENGTH</code> <code>Optional[float]</code> <p>Semimajor axis of ellipsoid.</p> <code>ELLIPS_HEIGHT</code> <code>Optional[float]</code> <p>Semiminor axis of ellipsoid.</p> <code>ELLIPS_ORDER</code> <code>Optional[float]</code> <p>Order of ellipsoid.</p> <code>ELLIPS_MAX_STEP</code> <code>Optional[float]</code> <p>Maximum height of road step.</p> <code>ELLIPS_NWIDTH</code> <code>Optional[float]</code> <p>Number of parallel ellipsoids.</p> <code>ELLIPS_NLENGTH</code> <code>Optional[float]</code> <p>Number of ellipsoids at sides of contact patch.</p> <code>ENV_C1</code> <code>Optional[float]</code> <p>Effective height attenuation.</p> <code>ENV_C2</code> <code>Optional[float]</code> <p>Effective plane angle attenuation.</p> <code>Q_A2</code> <code>Optional[float]</code> <p>Linear load term in contact length.</p> <code>Q_A1</code> <code>Optional[float]</code> <p>Square root load term in contact length.</p> Source code in <code>src\\usmlap\\vehicle\\tyre\\tir.py</code> <pre><code>class ContactPatch(_ParameterGroup):\n    \"\"\"\n    Contact length and obstacle enveloping parameters.\n\n    Attributes:\n        Q_RA1 (Optional[float]):\n            Square root term in contact length equation.\n        Q_RA2 (Optional[float]):\n            Linear term in contact length equation.\n        Q_RB1 (Optional[float]):\n            Root term in contact width equation.\n        Q_RB2 (Optional[float]):\n            Linear term in contact width equation.\n        ELLIPS_SHIFT (Optional[float]):\n            Scaling of distance between front and rear ellipsoid.\n        ELLIPS_LENGTH (Optional[float]):\n            Semimajor axis of ellipsoid.\n        ELLIPS_HEIGHT (Optional[float]):\n            Semiminor axis of ellipsoid.\n        ELLIPS_ORDER (Optional[float]):\n            Order of ellipsoid.\n        ELLIPS_MAX_STEP (Optional[float]):\n            Maximum height of road step.\n        ELLIPS_NWIDTH (Optional[float]):\n            Number of parallel ellipsoids.\n        ELLIPS_NLENGTH (Optional[float]):\n            Number of ellipsoids at sides of contact patch.\n        ENV_C1 (Optional[float]):\n            Effective height attenuation.\n        ENV_C2 (Optional[float]):\n            Effective plane angle attenuation.\n        Q_A2 (Optional[float]):\n            Linear load term in contact length.\n        Q_A1 (Optional[float]):\n            Square root load term in contact length.\n    \"\"\"\n\n    Q_RA1: Optional[float] = None\n    Q_RA2: Optional[float] = None\n    Q_RB1: Optional[float] = None\n    Q_RB2: Optional[float] = None\n    ELLIPS_SHIFT: Optional[float] = None\n    ELLIPS_LENGTH: Optional[float] = None\n    ELLIPS_HEIGHT: Optional[float] = None\n    ELLIPS_ORDER: Optional[float] = None\n    ELLIPS_MAX_STEP: Optional[float] = None\n    ELLIPS_NWIDTH: Optional[float] = None\n    ELLIPS_NLENGTH: Optional[float] = None\n    ENV_C1: Optional[float] = None\n    ENV_C2: Optional[float] = None\n    Q_A2: Optional[float] = None\n    Q_A1: Optional[float] = None\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/tyre/tir/#usmlap.vehicle.tyre.tir.Dimension","title":"<code>Dimension</code>","text":"<p>               Bases: <code>_ParameterGroup</code></p> <p>Tyre dimensions.</p> <p>Attributes:</p> Name Type Description <code>UNLOADED_RADIUS</code> <code>Optional[float]</code> <p>Free tyre radius.</p> <code>WIDTH</code> <code>Optional[float]</code> <p>Nominal section width of the tyre.</p> <code>RIM_RADIUS</code> <code>Optional[float]</code> <p>Nominal rim radius.</p> <code>RIM_WIDTH</code> <code>Optional[float]</code> <p>Rim width.</p> <code>ASPECT_RATIO</code> <code>Optional[float]</code> <p>Nominal aspect ratio.</p> Source code in <code>src\\usmlap\\vehicle\\tyre\\tir.py</code> <pre><code>class Dimension(_ParameterGroup):\n    \"\"\"\n    Tyre dimensions.\n\n    Attributes:\n        UNLOADED_RADIUS (Optional[float]):\n            Free tyre radius.\n        WIDTH (Optional[float]):\n            Nominal section width of the tyre.\n        RIM_RADIUS (Optional[float]):\n            Nominal rim radius.\n        RIM_WIDTH (Optional[float]):\n            Rim width.\n        ASPECT_RATIO (Optional[float]):\n            Nominal aspect ratio.\n    \"\"\"\n\n    UNLOADED_RADIUS: Optional[float] = None\n    WIDTH: Optional[float] = None\n    RIM_RADIUS: Optional[float] = None\n    RIM_WIDTH: Optional[float] = None\n    ASPECT_RATIO: Optional[float] = None\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/tyre/tir/#usmlap.vehicle.tyre.tir.InclinationAngleRange","title":"<code>InclinationAngleRange</code>","text":"<p>               Bases: <code>_ParameterGroup</code></p> <p>Minimum and maximum valid inclination angles.</p> <p>Attributes:</p> Name Type Description <code>CAMMIN</code> <code>Optional[float]</code> <p>Minimum valid camber angle.</p> <code>CAMMAX</code> <code>Optional[float]</code> <p>Maximum valid camber angle.</p> Source code in <code>src\\usmlap\\vehicle\\tyre\\tir.py</code> <pre><code>class InclinationAngleRange(_ParameterGroup):\n    \"\"\"\n    Minimum and maximum valid inclination angles.\n\n    Attributes:\n        CAMMIN (Optional[float]):\n            Minimum valid camber angle.\n        CAMMAX (Optional[float]):\n            Maximum valid camber angle.\n    \"\"\"\n\n    CAMMIN: Optional[float] = None\n    CAMMAX: Optional[float] = None\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/tyre/tir/#usmlap.vehicle.tyre.tir.Inertia","title":"<code>Inertia</code>","text":"<p>               Bases: <code>_ParameterGroup</code></p> <p>Mass and inertia properties of the tyre and tyre belt.</p> <p>Attributes:</p> Name Type Description <code>MASS</code> <code>Optional[float]</code> <p>Tyre mass.</p> <code>IXX</code> <code>Optional[float]</code> <p>Tyre diametral moment of inertia.</p> <code>IYY</code> <code>Optional[float]</code> <p>Tyre polar moment of inertia.</p> <code>BELT_MASS</code> <code>Optional[float]</code> <p>Belt mass.</p> <code>BELT_IXX</code> <code>Optional[float]</code> <p>Belt diametral moment of inertia.</p> <code>BELT_IYY</code> <code>Optional[float]</code> <p>Belt polar moment of inertia.</p> <code>GRAVITY</code> <code>Optional[float]</code> <p>Gravity acting on belt in Z direction.</p> Source code in <code>src\\usmlap\\vehicle\\tyre\\tir.py</code> <pre><code>class Inertia(_ParameterGroup):\n    \"\"\"\n    Mass and inertia properties of the tyre and tyre belt.\n\n    Attributes:\n        MASS (Optional[float]):\n            Tyre mass.\n        IXX (Optional[float]):\n            Tyre diametral moment of inertia.\n        IYY (Optional[float]):\n            Tyre polar moment of inertia.\n        BELT_MASS (Optional[float]):\n            Belt mass.\n        BELT_IXX (Optional[float]):\n            Belt diametral moment of inertia.\n        BELT_IYY (Optional[float]):\n            Belt polar moment of inertia.\n        GRAVITY (Optional[float]):\n            Gravity acting on belt in Z direction.\n    \"\"\"\n\n    MASS: Optional[float] = None\n    IXX: Optional[float] = None\n    IYY: Optional[float] = None\n    BELT_MASS: Optional[float] = None\n    BELT_IXX: Optional[float] = None\n    BELT_IYY: Optional[float] = None\n    GRAVITY: Optional[float] = None\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/tyre/tir/#usmlap.vehicle.tyre.tir.InflationPressureRange","title":"<code>InflationPressureRange</code>","text":"<p>               Bases: <code>_ParameterGroup</code></p> <p>Minimum and maximum allowed inflation pressures.</p> <p>Attributes:</p> Name Type Description <code>PRESMIN</code> <code>Optional[float]</code> <p>Minimum allowed inflation pressure.</p> <code>PRESMAX</code> <code>Optional[float]</code> <p>Maximum allowed inflation pressure.</p> Source code in <code>src\\usmlap\\vehicle\\tyre\\tir.py</code> <pre><code>class InflationPressureRange(_ParameterGroup):\n    \"\"\"\n    Minimum and maximum allowed inflation pressures.\n\n    Attributes:\n        PRESMIN (Optional[float]):\n            Minimum allowed inflation pressure.\n        PRESMAX (Optional[float]):\n            Maximum allowed inflation pressure.\n    \"\"\"\n\n    PRESMIN: Optional[float] = None\n    PRESMAX: Optional[float] = None\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/tyre/tir/#usmlap.vehicle.tyre.tir.LateralCoefficients","title":"<code>LateralCoefficients</code>","text":"<p>               Bases: <code>_ParameterGroup</code></p> <p>Coefficients for evaluating lateral force, Fy.</p> <p>Attributes:</p> Name Type Description <code>PCY1</code> <code>Optional[float]</code> <p>Shape factor Cfy for lateral forces.</p> <code>PDY1</code> <code>Optional[float]</code> <p>Lateral friction Muy.</p> <code>PDY2</code> <code>Optional[float]</code> <p>Variation of friction Muy with load.</p> <code>PDY3</code> <code>Optional[float]</code> <p>Variation of friction Muy with squared camber.</p> <code>PEY1</code> <code>Optional[float]</code> <p>Lateral curvature Efy at Fznom.</p> <code>PEY2</code> <code>Optional[float]</code> <p>Variation of curvature Efy with load.</p> <code>PEY3</code> <code>Optional[float]</code> <p>Zero order camber dependency of curvature Efy.</p> <code>PEY4</code> <code>Optional[float]</code> <p>Variation of curvature Efy with camber.</p> <code>PEY5</code> <code>Optional[float]</code> <p>Camber curvature Efc.</p> <code>PKY1</code> <code>Optional[float]</code> <p>Maximum value of stiffness Kfy/Fznom.</p> <code>PKY2</code> <code>Optional[float]</code> <p>Load at which Kfyreaches maximum value.</p> <code>PKY3</code> <code>Optional[float]</code> <p>Variation of Kfy/Fznom with camber.</p> <code>PKY4</code> <code>Optional[float]</code> <p>Curvature of stiffness Kfy.</p> <code>PKY5</code> <code>Optional[float]</code> <p>Peak stiffness variation with camber squared.</p> <code>PKY6</code> <code>Optional[float]</code> <p>Camber stiffness factor.</p> <code>PKY7</code> <code>Optional[float]</code> <p>Load dependency of camber stiffness factor.</p> <code>PHY1</code> <code>Optional[float]</code> <p>Horizontal shift Shy at Fznom.</p> <code>PHY2</code> <code>Optional[float]</code> <p>Variation of shift Shy with load.</p> <code>PVY1</code> <code>Optional[float]</code> <p>Vertical shift in Svy/Fz at Fznom.</p> <code>PVY2</code> <code>Optional[float]</code> <p>Variation of shift Svy/Fz with load.</p> <code>PVY3</code> <code>Optional[float]</code> <p>Variation of shift Svy/Fz with camber.</p> <code>PVY4</code> <code>Optional[float]</code> <p>Variation of shift Svy/Fz with camber and load.</p> <code>RBY1</code> <code>Optional[float]</code> <p>Slope factor for combined Fy reduction.</p> <code>RBY2</code> <code>Optional[float]</code> <p>Variation of slope Fy reduction with alpha.</p> <code>RBY3</code> <code>Optional[float]</code> <p>Shift term for alpha in slope Fy reduction.</p> <code>RBY4</code> <code>Optional[float]</code> <p>Influence of camber on stiffness of Fy combined.</p> <code>RCY1</code> <code>Optional[float]</code> <p>Shape factor for combined Fy reduction.</p> <code>REY1</code> <code>Optional[float]</code> <p>Curvature factor of combined Fy.</p> <code>REY2</code> <code>Optional[float]</code> <p>Curvature factor of combined Fy with load.</p> <code>RHY1</code> <code>Optional[float]</code> <p>Shift factor for combined Fy reduction.</p> <code>RHY2</code> <code>Optional[float]</code> <p>Shift factor for combined Fy reduction with load.</p> <code>RVY1</code> <code>Optional[float]</code> <p>Kappa induced side force Svyk/Muy*Fz at Fznom.</p> <code>RVY2</code> <code>Optional[float]</code> <p>Variation of Svyk/Muy*Fz with load.</p> <code>RVY3</code> <code>Optional[float]</code> <p>Variation of Svyk/Muy*Fz with camber.</p> <code>RVY4</code> <code>Optional[float]</code> <p>Variation of Svyk/Muy*Fz with alpha.</p> <code>RVY5</code> <code>Optional[float]</code> <p>Variation of Svyk/Muy*Fz with kappa.</p> <code>RVY6</code> <code>Optional[float]</code> <p>Variation of Svyk/Muy*Fz with atan(kappa).</p> <code>PPY1</code> <code>Optional[float]</code> <p>Pressure effect on cornering stiffness magnitude.</p> <code>PPY2</code> <code>Optional[float]</code> <p>Pressure effect on location of cornering stiffness peak.</p> <code>PPY3</code> <code>Optional[float]</code> <p>Linear pressure effect on lateral friction.</p> <code>PPY4</code> <code>Optional[float]</code> <p>Quadratic pressure effect on lateral friction.</p> <code>PPY5</code> <code>Optional[float]</code> <p>Influence of inflation pressure on camber stiffness.</p> Source code in <code>src\\usmlap\\vehicle\\tyre\\tir.py</code> <pre><code>class LateralCoefficients(_ParameterGroup):\n    \"\"\"\n    Coefficients for evaluating lateral force, Fy.\n\n    Attributes:\n        PCY1 (Optional[float]):\n            Shape factor Cfy for lateral forces.\n        PDY1 (Optional[float]):\n            Lateral friction Muy.\n        PDY2 (Optional[float]):\n            Variation of friction Muy with load.\n        PDY3 (Optional[float]):\n            Variation of friction Muy with squared camber.\n        PEY1 (Optional[float]):\n            Lateral curvature Efy at Fznom.\n        PEY2 (Optional[float]):\n            Variation of curvature Efy with load.\n        PEY3 (Optional[float]):\n            Zero order camber dependency of curvature Efy.\n        PEY4 (Optional[float]):\n            Variation of curvature Efy with camber.\n        PEY5 (Optional[float]):\n            Camber curvature Efc.\n        PKY1 (Optional[float]):\n            Maximum value of stiffness Kfy/Fznom.\n        PKY2 (Optional[float]):\n            Load at which Kfyreaches maximum value.\n        PKY3 (Optional[float]):\n            Variation of Kfy/Fznom with camber.\n        PKY4 (Optional[float]):\n            Curvature of stiffness Kfy.\n        PKY5 (Optional[float]):\n            Peak stiffness variation with camber squared.\n        PKY6 (Optional[float]):\n            Camber stiffness factor.\n        PKY7 (Optional[float]):\n            Load dependency of camber stiffness factor.\n        PHY1 (Optional[float]):\n            Horizontal shift Shy at Fznom.\n        PHY2 (Optional[float]):\n            Variation of shift Shy with load.\n        PVY1 (Optional[float]):\n            Vertical shift in Svy/Fz at Fznom.\n        PVY2 (Optional[float]):\n            Variation of shift Svy/Fz with load.\n        PVY3 (Optional[float]):\n            Variation of shift Svy/Fz with camber.\n        PVY4 (Optional[float]):\n            Variation of shift Svy/Fz with camber and load.\n        RBY1 (Optional[float]):\n            Slope factor for combined Fy reduction.\n        RBY2 (Optional[float]):\n            Variation of slope Fy reduction with alpha.\n        RBY3 (Optional[float]):\n            Shift term for alpha in slope Fy reduction.\n        RBY4 (Optional[float]):\n            Influence of camber on stiffness of Fy combined.\n        RCY1 (Optional[float]):\n            Shape factor for combined Fy reduction.\n        REY1 (Optional[float]):\n            Curvature factor of combined Fy.\n        REY2 (Optional[float]):\n            Curvature factor of combined Fy with load.\n        RHY1 (Optional[float]):\n            Shift factor for combined Fy reduction.\n        RHY2 (Optional[float]):\n            Shift factor for combined Fy reduction with load.\n        RVY1 (Optional[float]):\n            Kappa induced side force Svyk/Muy*Fz at Fznom.\n        RVY2 (Optional[float]):\n            Variation of Svyk/Muy*Fz with load.\n        RVY3 (Optional[float]):\n            Variation of Svyk/Muy*Fz with camber.\n        RVY4 (Optional[float]):\n            Variation of Svyk/Muy*Fz with alpha.\n        RVY5 (Optional[float]):\n            Variation of Svyk/Muy*Fz with kappa.\n        RVY6 (Optional[float]):\n            Variation of Svyk/Muy*Fz with atan(kappa).\n        PPY1 (Optional[float]):\n            Pressure effect on cornering stiffness magnitude.\n        PPY2 (Optional[float]):\n            Pressure effect on location of cornering stiffness peak.\n        PPY3 (Optional[float]):\n            Linear pressure effect on lateral friction.\n        PPY4 (Optional[float]):\n            Quadratic pressure effect on lateral friction.\n        PPY5 (Optional[float]):\n            Influence of inflation pressure on camber stiffness.\n    \"\"\"\n\n    PCY1: Optional[float] = None\n    PDY1: Optional[float] = None\n    PDY2: Optional[float] = None\n    PDY3: Optional[float] = None\n    PEY1: Optional[float] = None\n    PEY2: Optional[float] = None\n    PEY3: Optional[float] = None\n    PEY4: Optional[float] = None\n    PEY5: Optional[float] = None\n    PKY1: Optional[float] = None\n    PKY2: Optional[float] = None\n    PKY3: Optional[float] = None\n    PKY4: Optional[float] = None\n    PKY5: Optional[float] = None\n    PKY6: Optional[float] = None\n    PKY7: Optional[float] = None\n    PHY1: Optional[float] = None\n    PHY2: Optional[float] = None\n    PVY1: Optional[float] = None\n    PVY2: Optional[float] = None\n    PVY3: Optional[float] = None\n    PVY4: Optional[float] = None\n    RBY1: Optional[float] = None\n    RBY2: Optional[float] = None\n    RBY3: Optional[float] = None\n    RBY4: Optional[float] = None\n    RCY1: Optional[float] = None\n    REY1: Optional[float] = None\n    REY2: Optional[float] = None\n    RHY1: Optional[float] = None\n    RHY2: Optional[float] = None\n    RVY1: Optional[float] = None\n    RVY2: Optional[float] = None\n    RVY3: Optional[float] = None\n    RVY4: Optional[float] = None\n    RVY5: Optional[float] = None\n    RVY6: Optional[float] = None\n    PPY1: Optional[float] = None\n    PPY2: Optional[float] = None\n    PPY3: Optional[float] = None\n    PPY4: Optional[float] = None\n    PPY5: Optional[float] = None\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/tyre/tir/#usmlap.vehicle.tyre.tir.LongSlipRange","title":"<code>LongSlipRange</code>","text":"<p>               Bases: <code>_ParameterGroup</code></p> <p>Minimum and maximum valid longitudinal slips.</p> <p>Attributes:</p> Name Type Description <code>KPUMIN</code> <code>Optional[float]</code> <p>Minimum valid wheel slip.</p> <code>KPUMAX</code> <code>Optional[float]</code> <p>Maximum valid wheel slip.</p> Source code in <code>src\\usmlap\\vehicle\\tyre\\tir.py</code> <pre><code>class LongSlipRange(_ParameterGroup):\n    \"\"\"\n    Minimum and maximum valid longitudinal slips.\n\n    Attributes:\n        KPUMIN (Optional[float]):\n            Minimum valid wheel slip.\n        KPUMAX (Optional[float]):\n            Maximum valid wheel slip.\n    \"\"\"\n\n    KPUMIN: Optional[float] = None\n    KPUMAX: Optional[float] = None\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/tyre/tir/#usmlap.vehicle.tyre.tir.LongitudinalCoefficients","title":"<code>LongitudinalCoefficients</code>","text":"<p>               Bases: <code>_ParameterGroup</code></p> <p>Coefficients for evaluating longitudinal force, Fx.</p> <p>Attributes:</p> Name Type Description <code>PCX1</code> <code>Optional[float]</code> <p>Shape factor Cf for longitudinal force.</p> <code>PDX1</code> <code>Optional[float]</code> <p>Longitudinal friction Mux at Fznom.</p> <code>PDX2</code> <code>Optional[float]</code> <p>Variation of friction Mux with load.</p> <code>PDX3</code> <code>Optional[float]</code> <p>Variation of friction Mux with camber.</p> <code>PEX1</code> <code>Optional[float]</code> <p>Longitudinal curvature Ef at Fznom.</p> <code>PEX2</code> <code>Optional[float]</code> <p>Variation of curvature Ef with load.</p> <code>PEX3</code> <code>Optional[float]</code> <p>Variation of curvature Ef with load squared.</p> <code>PEX4</code> <code>Optional[float]</code> <p>Factor in curvature Ef while driving.</p> <code>PKX1</code> <code>Optional[float]</code> <p>Longitudinal slip stiffness Kf/Fz at Fznom.</p> <code>PKX2</code> <code>Optional[float]</code> <p>Variation of slip stiffness Kf/Fz with load.</p> <code>PKX3</code> <code>Optional[float]</code> <p>Exponent in slip stiffness Kf/Fz with load.</p> <code>PHX1</code> <code>Optional[float]</code> <p>Horizontal shift Shx at Fznom.</p> <code>PHX2</code> <code>Optional[float]</code> <p>Variation of shift Shx with load.</p> <code>PVX1</code> <code>Optional[float]</code> <p>Vertical shift Sv/Fz at Fznom.</p> <code>PVX2</code> <code>Optional[float]</code> <p>Variation of shift Sv/Fz with load.</p> <code>RBX1</code> <code>Optional[float]</code> <p>Slope factor for combined slip Fx reduction.</p> <code>RBX2</code> <code>Optional[float]</code> <p>Variation of slope Fx reduction with kappa.</p> <code>RBX3</code> <code>Optional[float]</code> <p>Influence of camber on stiffness for Fx combined.</p> <code>RCX1</code> <code>Optional[float]</code> <p>Shape factor for combined slip Fx reduction.</p> <code>REX1</code> <code>Optional[float]</code> <p>Curvature factor of combined Fx.</p> <code>REX2</code> <code>Optional[float]</code> <p>Curvature factor of combined Fx with load.</p> <code>RHX1</code> <code>Optional[float]</code> <p>Shift factor for combined slip Fx reduction.</p> <code>PPX1</code> <code>Optional[float]</code> <p>Linear pressure effect on slip stiffness.</p> <code>PPX2</code> <code>Optional[float]</code> <p>Quadratic pressure effect on slip stiffness.</p> <code>PPX3</code> <code>Optional[float]</code> <p>Linear pressure effect on longitudinal friction.</p> <code>PPX4</code> <code>Optional[float]</code> <p>Quadratic pressure effect on longitudinal friction.</p> Source code in <code>src\\usmlap\\vehicle\\tyre\\tir.py</code> <pre><code>class LongitudinalCoefficients(_ParameterGroup):\n    \"\"\"\n    Coefficients for evaluating longitudinal force, Fx.\n\n    Attributes:\n        PCX1 (Optional[float]):\n            Shape factor Cf for longitudinal force.\n        PDX1 (Optional[float]):\n            Longitudinal friction Mux at Fznom.\n        PDX2 (Optional[float]):\n            Variation of friction Mux with load.\n        PDX3 (Optional[float]):\n            Variation of friction Mux with camber.\n        PEX1 (Optional[float]):\n            Longitudinal curvature Ef at Fznom.\n        PEX2 (Optional[float]):\n            Variation of curvature Ef with load.\n        PEX3 (Optional[float]):\n            Variation of curvature Ef with load squared.\n        PEX4 (Optional[float]):\n            Factor in curvature Ef while driving.\n        PKX1 (Optional[float]):\n            Longitudinal slip stiffness Kf/Fz at Fznom.\n        PKX2 (Optional[float]):\n            Variation of slip stiffness Kf/Fz with load.\n        PKX3 (Optional[float]):\n            Exponent in slip stiffness Kf/Fz with load.\n        PHX1 (Optional[float]):\n            Horizontal shift Shx at Fznom.\n        PHX2 (Optional[float]):\n            Variation of shift Shx with load.\n        PVX1 (Optional[float]):\n            Vertical shift Sv/Fz at Fznom.\n        PVX2 (Optional[float]):\n            Variation of shift Sv/Fz with load.\n        RBX1 (Optional[float]):\n            Slope factor for combined slip Fx reduction.\n        RBX2 (Optional[float]):\n            Variation of slope Fx reduction with kappa.\n        RBX3 (Optional[float]):\n            Influence of camber on stiffness for Fx combined.\n        RCX1 (Optional[float]):\n            Shape factor for combined slip Fx reduction.\n        REX1 (Optional[float]):\n            Curvature factor of combined Fx.\n        REX2 (Optional[float]):\n            Curvature factor of combined Fx with load.\n        RHX1 (Optional[float]):\n            Shift factor for combined slip Fx reduction.\n        PPX1 (Optional[float]):\n            Linear pressure effect on slip stiffness.\n        PPX2 (Optional[float]):\n            Quadratic pressure effect on slip stiffness.\n        PPX3 (Optional[float]):\n            Linear pressure effect on longitudinal friction.\n        PPX4 (Optional[float]):\n            Quadratic pressure effect on longitudinal friction.\n    \"\"\"\n\n    PCX1: Optional[float] = None\n    PDX1: Optional[float] = None\n    PDX2: Optional[float] = None\n    PDX3: Optional[float] = None\n    PEX1: Optional[float] = None\n    PEX2: Optional[float] = None\n    PEX3: Optional[float] = None\n    PEX4: Optional[float] = None\n    PKX1: Optional[float] = None\n    PKX2: Optional[float] = None\n    PKX3: Optional[float] = None\n    PHX1: Optional[float] = None\n    PHX2: Optional[float] = None\n    PVX1: Optional[float] = None\n    PVX2: Optional[float] = None\n    RBX1: Optional[float] = None\n    RBX2: Optional[float] = None\n    RBX3: Optional[float] = None\n    RCX1: Optional[float] = None\n    REX1: Optional[float] = None\n    REX2: Optional[float] = None\n    RHX1: Optional[float] = None\n    PPX1: Optional[float] = None\n    PPX2: Optional[float] = None\n    PPX3: Optional[float] = None\n    PPX4: Optional[float] = None\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/tyre/tir/#usmlap.vehicle.tyre.tir.Model","title":"<code>Model</code>","text":"<p>               Bases: <code>_ParameterGroup</code></p> <p>Parameters on the usage of the tyre model.</p> <p>Attributes:</p> Name Type Description <code>FITTYP</code> <code>int</code> <p>Magic Formula version number.</p> <code>TYRESIDE</code> <code>str</code> <p>Position of tyre during measurements. \"LEFT\" or \"RIGHT\" (default = \"LEFT\").</p> <code>LONGVL</code> <code>float</code> <p>Reference speed.</p> <code>VXLOW</code> <code>float</code> <p>Lower boundary velocity in slip calculation.</p> <code>ROAD_INCREMENT</code> <code>Optional[float]</code> <p>Increment in road sampling.</p> <code>ROAD_DIRECTION</code> <code>Optional[float]</code> <p>Direction of travelled distance. 1 = default, -1 = reverse (default = 1)</p> Source code in <code>src\\usmlap\\vehicle\\tyre\\tir.py</code> <pre><code>class Model(_ParameterGroup):\n    \"\"\"\n    Parameters on the usage of the tyre model.\n\n    Attributes:\n        FITTYP (int):\n            Magic Formula version number.\n        TYRESIDE (str):\n            Position of tyre during measurements.\n            \"LEFT\" or \"RIGHT\" (default = \"LEFT\").\n        LONGVL (float):\n            Reference speed.\n        VXLOW (float):\n            Lower boundary velocity in slip calculation.\n        ROAD_INCREMENT (Optional[float]):\n            Increment in road sampling.\n        ROAD_DIRECTION (Optional[float]):\n            Direction of travelled distance.\n            1 = default, -1 = reverse (default = 1)\n    \"\"\"\n\n    FITTYP: int\n    TYRESIDE: str = \"LEFT\"\n    LONGVL: float\n    VXLOW: float\n    ROAD_INCREMENT: Optional[float] = None\n    ROAD_DIRECTION: Optional[float] = 1\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/tyre/tir/#usmlap.vehicle.tyre.tir.OperatingConditions","title":"<code>OperatingConditions</code>","text":"<p>               Bases: <code>_ParameterGroup</code></p> <p>Operating conditions of the tyre.</p> <p>Attributes:</p> Name Type Description <code>INFLPRES</code> <code>Optional[float]</code> <p>Tyre inflation pressure.</p> <code>NOMPRES</code> <code>Optional[float]</code> <p>Nominal pressure used in Magic Formula equations.</p> Source code in <code>src\\usmlap\\vehicle\\tyre\\tir.py</code> <pre><code>class OperatingConditions(_ParameterGroup):\n    \"\"\"\n    Operating conditions of the tyre.\n\n    Attributes:\n        INFLPRES (Optional[float]):\n            Tyre inflation pressure.\n        NOMPRES (Optional[float]):\n            Nominal pressure used in Magic Formula equations.\n    \"\"\"\n\n    INFLPRES: Optional[float] = None\n    NOMPRES: Optional[float] = None\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/tyre/tir/#usmlap.vehicle.tyre.tir.OverturningCoefficients","title":"<code>OverturningCoefficients</code>","text":"<p>               Bases: <code>_ParameterGroup</code></p> <p>Coefficients for evaluating overturning moment, Mx.</p> <p>Attributes:</p> Name Type Description <code>QSX1</code> <code>Optional[float]</code> <p>Overturning moment offset.</p> <code>QSX2</code> <code>Optional[float]</code> <p>Camber induced overturning couple.</p> <code>QSX3</code> <code>Optional[float]</code> <p>Fy induced overturning couple.</p> <code>QSX4</code> <code>Optional[float]</code> <p>Mixed load, lateral force and camber on Mx.</p> <code>QSX5</code> <code>Optional[float]</code> <p>Load effect on Mx with lateral force and camber.</p> <code>QSX6</code> <code>Optional[float]</code> <p>B-factor of load with Mx.</p> <code>QSX7</code> <code>Optional[float]</code> <p>Camber with load on Mx.</p> <code>QSX8</code> <code>Optional[float]</code> <p>Lateral force with load on Mx.</p> <code>QSX9</code> <code>Optional[float]</code> <p>B-factor of lateral force with load on Mx.</p> <code>QSX10</code> <code>Optional[float]</code> <p>Vertical force with camber on Mx.</p> <code>QSX11</code> <code>Optional[float]</code> <p>B-factor of vertical force with camber on Mx.</p> <code>QSX12</code> <code>Optional[float]</code> <p>Camber squared induced overturning moment.</p> <code>QSX13</code> <code>Optional[float]</code> <p>Lateral force induced overturning moment.</p> <code>QSX14</code> <code>Optional[float]</code> <p>Lateral force induced overturning moment with camber.</p> <code>PPMX1</code> <code>Optional[float]</code> <p>Influence of inflation pressure on overturning moment.</p> Source code in <code>src\\usmlap\\vehicle\\tyre\\tir.py</code> <pre><code>class OverturningCoefficients(_ParameterGroup):\n    \"\"\"\n    Coefficients for evaluating overturning moment, Mx.\n\n    Attributes:\n        QSX1 (Optional[float]):\n            Overturning moment offset.\n        QSX2 (Optional[float]):\n            Camber induced overturning couple.\n        QSX3 (Optional[float]):\n            Fy induced overturning couple.\n        QSX4 (Optional[float]):\n            Mixed load, lateral force and camber on Mx.\n        QSX5 (Optional[float]):\n            Load effect on Mx with lateral force and camber.\n        QSX6 (Optional[float]):\n            B-factor of load with Mx.\n        QSX7 (Optional[float]):\n            Camber with load on Mx.\n        QSX8 (Optional[float]):\n            Lateral force with load on Mx.\n        QSX9 (Optional[float]):\n            B-factor of lateral force with load on Mx.\n        QSX10 (Optional[float]):\n            Vertical force with camber on Mx.\n        QSX11 (Optional[float]):\n            B-factor of vertical force with camber on Mx.\n        QSX12 (Optional[float]):\n            Camber squared induced overturning moment.\n        QSX13 (Optional[float]):\n            Lateral force induced overturning moment.\n        QSX14 (Optional[float]):\n            Lateral force induced overturning moment with camber.\n        PPMX1 (Optional[float]):\n            Influence of inflation pressure on overturning moment.\n    \"\"\"\n\n    QSX1: Optional[float] = None\n    QSX2: Optional[float] = None\n    QSX3: Optional[float] = None\n    QSX4: Optional[float] = None\n    QSX5: Optional[float] = None\n    QSX6: Optional[float] = None\n    QSX7: Optional[float] = None\n    QSX8: Optional[float] = None\n    QSX9: Optional[float] = None\n    QSX10: Optional[float] = None\n    QSX11: Optional[float] = None\n    QSX12: Optional[float] = None\n    QSX13: Optional[float] = None\n    QSX14: Optional[float] = None\n    PPMX1: Optional[float] = None\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/tyre/tir/#usmlap.vehicle.tyre.tir.RollingCoefficients","title":"<code>RollingCoefficients</code>","text":"<p>               Bases: <code>_ParameterGroup</code></p> <p>Coefficients for evaluating rolling resistance moment, My.</p> <p>Attributes:</p> Name Type Description <code>QSY1</code> <code>Optional[float]</code> <p>Rolling resistance torque coefficient.</p> <code>QSY2</code> <code>Optional[float]</code> <p>Rolling resistance torque depending on Fx.</p> <code>QSY3</code> <code>Optional[float]</code> <p>Rolling resistance torque depending on speed.</p> <code>QSY4</code> <code>Optional[float]</code> <p>Rolling resistance torque depending on speed ^ 4.</p> <code>QSY5</code> <code>Optional[float]</code> <p>Rolling resistance torque depending on camber squared.</p> <code>QSY6</code> <code>Optional[float]</code> <p>Rolling resistance torque depending on load and camber squared.</p> <code>QSY7</code> <code>Optional[float]</code> <p>Rolling resistance torque coefficient load dependency.</p> <code>QSY8</code> <code>Optional[float]</code> <p>Rolling resistance torque coefficient pressure dependency.</p> Source code in <code>src\\usmlap\\vehicle\\tyre\\tir.py</code> <pre><code>class RollingCoefficients(_ParameterGroup):\n    \"\"\"\n    Coefficients for evaluating rolling resistance moment, My.\n\n    Attributes:\n        QSY1 (Optional[float]):\n            Rolling resistance torque coefficient.\n        QSY2 (Optional[float]):\n            Rolling resistance torque depending on Fx.\n        QSY3 (Optional[float]):\n            Rolling resistance torque depending on speed.\n        QSY4 (Optional[float]):\n            Rolling resistance torque depending on speed ^ 4.\n        QSY5 (Optional[float]):\n            Rolling resistance torque depending on camber squared.\n        QSY6 (Optional[float]):\n            Rolling resistance torque depending on load and camber squared.\n        QSY7 (Optional[float]):\n            Rolling resistance torque coefficient load dependency.\n        QSY8 (Optional[float]):\n            Rolling resistance torque coefficient pressure dependency.\n    \"\"\"\n\n    QSY1: Optional[float] = None\n    QSY2: Optional[float] = None\n    QSY3: Optional[float] = None\n    QSY4: Optional[float] = None\n    QSY5: Optional[float] = None\n    QSY6: Optional[float] = None\n    QSY7: Optional[float] = None\n    QSY8: Optional[float] = None\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/tyre/tir/#usmlap.vehicle.tyre.tir.ScalingCoefficients","title":"<code>ScalingCoefficients</code>","text":"<p>               Bases: <code>_ParameterGroup</code></p> <p>Magic Formula scaling factors.</p> <p>Attributes:</p> Name Type Description <code>LFZO</code> <code>Optional[float]</code> <p>Scale factor of nominal (rated) load.</p> <code>LCX</code> <code>Optional[float]</code> <p>Scale factor of Fx shape factor.</p> <code>LMUX</code> <code>Optional[float]</code> <p>Scale factor of Fx peak friction coefficient.</p> <code>LEX</code> <code>Optional[float]</code> <p>Scale factor of Fx curvature factor.</p> <code>LKX</code> <code>Optional[float]</code> <p>Scale factor of slip stiffness.</p> <code>LHX</code> <code>Optional[float]</code> <p>Scale factor of Fx horizontal shift.</p> <code>LVX</code> <code>Optional[float]</code> <p>Scale factor of Fx vertical shift.</p> <code>LCY</code> <code>Optional[float]</code> <p>Scale factor of Fy shape factor.</p> <code>LMUY</code> <code>Optional[float]</code> <p>Scale factor of Fy peak friction coefficient.</p> <code>LEY</code> <code>Optional[float]</code> <p>Scale factor of Fy curvature factor.</p> <code>LKY</code> <code>Optional[float]</code> <p>Scale factor of cornering stiffness.</p> <code>LKYC</code> <code>Optional[float]</code> <p>Scale factor of camber stiffness.</p> <code>LKZC</code> <code>Optional[float]</code> <p>Scale factor of camber moment stiffness.</p> <code>LHY</code> <code>Optional[float]</code> <p>Scale factor of Fy horizontal shift.</p> <code>LVY</code> <code>Optional[float]</code> <p>Scale factor of Fy vertical shift.</p> <code>LTR</code> <code>Optional[float]</code> <p>Scale factor of Peak of pneumatic trail.</p> <code>LRES</code> <code>Optional[float]</code> <p>Scale factor for offset of residual torque.</p> <code>LXAL</code> <code>Optional[float]</code> <p>Scale factor of alpha influence on Fx.</p> <code>LYKA</code> <code>Optional[float]</code> <p>Scale factor of alpha influence on Fx.</p> <code>LVYKA</code> <code>Optional[float]</code> <p>Scale factor of kappa induced Fy.</p> <code>LS</code> <code>Optional[float]</code> <p>Scale factor of Moment arm of Fx.</p> <code>LMX</code> <code>Optional[float]</code> <p>Scale factor of overturning moment.</p> <code>LVMX</code> <code>Optional[float]</code> <p>Scale factor of Mx vertical shift.</p> <code>LMY</code> <code>Optional[float]</code> <p>Scale factor of rolling resistance torque.</p> <code>LMP</code> <code>Optional[float]</code> <p>Scale factor of parking moment.</p> Source code in <code>src\\usmlap\\vehicle\\tyre\\tir.py</code> <pre><code>class ScalingCoefficients(_ParameterGroup):\n    \"\"\"\n    Magic Formula scaling factors.\n\n    Attributes:\n        LFZO (Optional[float]):\n            Scale factor of nominal (rated) load.\n        LCX (Optional[float]):\n            Scale factor of Fx shape factor.\n        LMUX (Optional[float]):\n            Scale factor of Fx peak friction coefficient.\n        LEX (Optional[float]):\n            Scale factor of Fx curvature factor.\n        LKX (Optional[float]):\n            Scale factor of slip stiffness.\n        LHX (Optional[float]):\n            Scale factor of Fx horizontal shift.\n        LVX (Optional[float]):\n            Scale factor of Fx vertical shift.\n        LCY (Optional[float]):\n            Scale factor of Fy shape factor.\n        LMUY (Optional[float]):\n            Scale factor of Fy peak friction coefficient.\n        LEY (Optional[float]):\n            Scale factor of Fy curvature factor.\n        LKY (Optional[float]):\n            Scale factor of cornering stiffness.\n        LKYC (Optional[float]):\n            Scale factor of camber stiffness.\n        LKZC (Optional[float]):\n            Scale factor of camber moment stiffness.\n        LHY (Optional[float]):\n            Scale factor of Fy horizontal shift.\n        LVY (Optional[float]):\n            Scale factor of Fy vertical shift.\n        LTR (Optional[float]):\n            Scale factor of Peak of pneumatic trail.\n        LRES (Optional[float]):\n            Scale factor for offset of residual torque.\n        LXAL (Optional[float]):\n            Scale factor of alpha influence on Fx.\n        LYKA (Optional[float]):\n            Scale factor of alpha influence on Fx.\n        LVYKA (Optional[float]):\n            Scale factor of kappa induced Fy.\n        LS (Optional[float]):\n            Scale factor of Moment arm of Fx.\n        LMX (Optional[float]):\n            Scale factor of overturning moment.\n        LVMX (Optional[float]):\n            Scale factor of Mx vertical shift.\n        LMY (Optional[float]):\n            Scale factor of rolling resistance torque.\n        LMP (Optional[float]):\n            Scale factor of parking moment.\n    \"\"\"\n\n    LFZO: Optional[float] = None\n    LCX: Optional[float] = None\n    LMUX: Optional[float] = None\n    LEX: Optional[float] = None\n    LKX: Optional[float] = None\n    LHX: Optional[float] = None\n    LVX: Optional[float] = None\n    LCY: Optional[float] = None\n    LMUY: Optional[float] = None\n    LEY: Optional[float] = None\n    LKY: Optional[float] = None\n    LKYC: Optional[float] = None\n    LKZC: Optional[float] = None\n    LHY: Optional[float] = None\n    LVY: Optional[float] = None\n    LTR: Optional[float] = None\n    LRES: Optional[float] = None\n    LXAL: Optional[float] = None\n    LYKA: Optional[float] = None\n    LVYKA: Optional[float] = None\n    LS: Optional[float] = None\n    LMX: Optional[float] = None\n    LVMX: Optional[float] = None\n    LMY: Optional[float] = None\n    LMP: Optional[float] = None\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/tyre/tir/#usmlap.vehicle.tyre.tir.SlipAngleRange","title":"<code>SlipAngleRange</code>","text":"<p>               Bases: <code>_ParameterGroup</code></p> <p>Minimum and maximum valid sideslip angles.</p> <p>Attributes:</p> Name Type Description <code>ALPMIN</code> <code>Optional[float]</code> <p>Minimum valid slip angle.</p> <code>ALPMAX</code> <code>Optional[float]</code> <p>Maximum valid slip angle.</p> Source code in <code>src\\usmlap\\vehicle\\tyre\\tir.py</code> <pre><code>class SlipAngleRange(_ParameterGroup):\n    \"\"\"\n    Minimum and maximum valid sideslip angles.\n\n    Attributes:\n        ALPMIN (Optional[float]):\n            Minimum valid slip angle.\n        ALPMAX (Optional[float]):\n            Maximum valid slip angle.\n    \"\"\"\n\n    ALPMIN: Optional[float] = None\n    ALPMAX: Optional[float] = None\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/tyre/tir/#usmlap.vehicle.tyre.tir.Structural","title":"<code>Structural</code>","text":"<p>               Bases: <code>_ParameterGroup</code></p> <p>Tyre stiffness, damping, and eigenfrequencies.</p> <p>Attributes:</p> Name Type Description <code>LONGITUDINAL_STIFFNESS</code> <code>Optional[float]</code> <p>Tyre overall longitudinal stiffness.</p> <code>LATERAL_STIFFNESS</code> <code>Optional[float]</code> <p>Tyre overall lateral stiffness.</p> <code>YAW_STIFFNESS</code> <code>Optional[float]</code> <p>Tyre overall yaw stiffness.</p> <code>FREQ_LONG</code> <code>Optional[float]</code> <p>Undamped frequency fore/aft and vertical mode.</p> <code>FREQ_LAT</code> <code>Optional[float]</code> <p>Undamped frequency lateral mode.</p> <code>FREQ_YAW</code> <code>Optional[float]</code> <p>Undamped frequency yaw and camber mode.</p> <code>FREQ_WINDUP</code> <code>Optional[float]</code> <p>Undamped frequency wind-up mode.</p> <code>DAMP_LONG</code> <code>Optional[float]</code> <p>Dimensionless damping fore/aft and vertical mode.</p> <code>DAMP_LAT</code> <code>Optional[float]</code> <p>Dimensionless damping lateral mode.</p> <code>DAMP_YAW</code> <code>Optional[float]</code> <p>Dimensionless damping yaw and camber mode.</p> <code>DAMP_WINDUP</code> <code>Optional[float]</code> <p>Dimensionless damping wind-up mode.</p> <code>DAMP_RESIDUAL</code> <code>Optional[float]</code> <p>Residual damping (proportional to stiffness).</p> <code>DAMP_VLOW</code> <code>Optional[float]</code> <p>Additional low speed damping (proportional to stiffness).</p> <code>Q_BVX</code> <code>Optional[float]</code> <p>Load and speed influence on in-plane translation stiffness.</p> <code>Q_BVT</code> <code>Optional[float]</code> <p>Load and speed influence on in-plane rotation stiffness.</p> <code>PCFX1</code> <code>Optional[float]</code> <p>Tyre overall longitudinal stiffness vertical deflection dependency linear term.</p> <code>PCFX2</code> <code>Optional[float]</code> <p>Tyre overall longitudinal stiffness vertical deflection dependency quadratic term.</p> <code>PCFX3</code> <code>Optional[float]</code> <p>Tyre overall longitudinal stiffness pressure dependency.</p> <code>PCFY1</code> <code>Optional[float]</code> <p>Tyre overall lateral stiffness vertical deflection dependency linear term.</p> <code>PCFY2</code> <code>Optional[float]</code> <p>Tyre overall lateral stiffness vertical deflection dependency quadratic term.</p> <code>PCFY3</code> <code>Optional[float]</code> <p>Tyre overall lateral stiffness pressure dependency.</p> <code>PCMZ1</code> <code>Optional[float]</code> <p>Tyre overall yaw stiffness pressure dependency.</p> Source code in <code>src\\usmlap\\vehicle\\tyre\\tir.py</code> <pre><code>class Structural(_ParameterGroup):\n    \"\"\"\n    Tyre stiffness, damping, and eigenfrequencies.\n\n    Attributes:\n        LONGITUDINAL_STIFFNESS (Optional[float]):\n            Tyre overall longitudinal stiffness.\n        LATERAL_STIFFNESS (Optional[float]):\n            Tyre overall lateral stiffness.\n        YAW_STIFFNESS (Optional[float]):\n            Tyre overall yaw stiffness.\n        FREQ_LONG (Optional[float]):\n            Undamped frequency fore/aft and vertical mode.\n        FREQ_LAT (Optional[float]):\n            Undamped frequency lateral mode.\n        FREQ_YAW (Optional[float]):\n            Undamped frequency yaw and camber mode.\n        FREQ_WINDUP (Optional[float]):\n            Undamped frequency wind-up mode.\n        DAMP_LONG (Optional[float]):\n            Dimensionless damping fore/aft and vertical mode.\n        DAMP_LAT (Optional[float]):\n            Dimensionless damping lateral mode.\n        DAMP_YAW (Optional[float]):\n            Dimensionless damping yaw and camber mode.\n        DAMP_WINDUP (Optional[float]):\n            Dimensionless damping wind-up mode.\n        DAMP_RESIDUAL (Optional[float]):\n            Residual damping (proportional to stiffness).\n        DAMP_VLOW (Optional[float]):\n            Additional low speed damping (proportional to stiffness).\n        Q_BVX (Optional[float]):\n            Load and speed influence on in-plane translation stiffness.\n        Q_BVT (Optional[float]):\n            Load and speed influence on in-plane rotation stiffness.\n        PCFX1 (Optional[float]):\n            Tyre overall longitudinal stiffness\n            vertical deflection dependency linear term.\n        PCFX2 (Optional[float]):\n            Tyre overall longitudinal stiffness\n            vertical deflection dependency quadratic term.\n        PCFX3 (Optional[float]):\n            Tyre overall longitudinal stiffness pressure dependency.\n        PCFY1 (Optional[float]):\n            Tyre overall lateral stiffness\n            vertical deflection dependency linear term.\n        PCFY2 (Optional[float]):\n            Tyre overall lateral stiffness\n            vertical deflection dependency quadratic term.\n        PCFY3 (Optional[float]):\n            Tyre overall lateral stiffness pressure dependency.\n        PCMZ1 (Optional[float]):\n            Tyre overall yaw stiffness pressure dependency.\n    \"\"\"\n\n    LONGITUDINAL_STIFFNESS: Optional[float] = None\n    LATERAL_STIFFNESS: Optional[float] = None\n    YAW_STIFFNESS: Optional[float] = None\n    FREQ_LONG: Optional[float] = None\n    FREQ_LAT: Optional[float] = None\n    FREQ_YAW: Optional[float] = None\n    FREQ_WINDUP: Optional[float] = None\n    DAMP_LONG: Optional[float] = None\n    DAMP_LAT: Optional[float] = None\n    DAMP_YAW: Optional[float] = None\n    DAMP_WINDUP: Optional[float] = None\n    DAMP_RESIDUAL: Optional[float] = None\n    DAMP_VLOW: Optional[float] = None\n    Q_BVX: Optional[float] = None\n    Q_BVT: Optional[float] = None\n    PCFX1: Optional[float] = None\n    PCFX2: Optional[float] = None\n    PCFX3: Optional[float] = None\n    PCFY1: Optional[float] = None\n    PCFY2: Optional[float] = None\n    PCFY3: Optional[float] = None\n    PCMZ1: Optional[float] = None\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/tyre/tir/#usmlap.vehicle.tyre.tir.TIRParameters","title":"<code>TIRParameters</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Tyre parameters specified in a .TIR file.</p> <p>For ease of use, parameters are split into groups.</p> <p>Values can be accessed using dot notation:</p> <p>Attributes:</p> Name Type Description <code>UNITS</code> <code>Units</code> <p>Units used in the .TIR file.</p> <code>MODEL</code> <code>Model</code> <p>Parameters on the usage of the tyre model.</p> <code>DIMENSION</code> <code>Dimension</code> <p>Tyre dimensions.</p> <code>OPERATING_CONDITIONS</code> <code>OperatingConditions</code> <p>Operating conditions of the tyre.</p> <code>INERTIA</code> <code>Inertia</code> <p>Mass and inertia properties of the tyre and tyre belt.</p> <code>VERTICAL</code> <code>Vertical</code> <p>Vertical stiffness, loaded and effective rolling radius.</p> <code>STRUCTURAL</code> <code>Structural</code> <p>Tyre stiffness, damping, and eigenfrequencies.</p> <code>CONTACT_PATCH</code> <code>ContactPatch</code> <p>Contact length and obstacle enveloping parameters.</p> <code>INFLATION_PRESSURE_RANGE</code> <code>InflationPressureRange</code> <p>Minimum and maximum allowed inflation pressures.</p> <code>VERTICAL_FORCE_RANGE</code> <code>VerticalForceRange</code> <p>Minimum and maximum allowed wheel loads.</p> <code>LONG_SLIP_RANGE</code> <code>LongSlipRange</code> <p>Minimum and maximum valid longitudinal slips.</p> <code>SLIP_ANGLE_RANGE</code> <code>SlipAngleRange</code> <p>Minimum and maximum valid sideslip angles.</p> <code>INCLINATION_ANGLE_RANGE</code> <code>InclinationAngleRange</code> <p>Minimum and maximum valid inclination angles.</p> <code>SCALING_COEFFICIENTS</code> <code>ScalingCoefficients</code> <p>Magic Formula scaling factors.</p> <code>LONGITUDINAL_COEFFICIENTS</code> <code>LongitudinalCoefficients</code> <p>Coefficients for evaluating longitudinal force, Fx.</p> <code>OVERTURNING_COEFFICIENTS</code> <code>OverturningCoefficients</code> <p>Coefficients for evaluating overturning moment, Mx.</p> <code>LATERAL_COEFFICIENTS</code> <code>LateralCoefficients</code> <p>Coefficients for evaluating lateral force, Fy.</p> <code>ROLLING_COEFFICIENTS</code> <code>RollingCoefficients</code> <p>Coefficients for evaluating rolling resistance moment, My.</p> <code>ALIGNING_COEFFICIENTS</code> <code>AligningCoefficients</code> <p>Coefficients for evaluating self-aligning moment, Mz.</p> <code>TURNSLIP_COEFFICIENTS</code> <code>TurnslipCoefficients</code> <p>Coefficients for turn slip, affecting all forces and moments.</p> <p>Examples:</p> <p>Load tyre parameters from a .TIR file <code>Example Tyre.tir</code>, and get the inflation pressure of the tyre (<code>INFLPRES</code>).</p> <pre><code>&gt;&gt;&gt; tir_parameters = TIRParameters.from_file(\"Example Tyre.tir\")\n&gt;&gt;&gt; inflation_pressure = tir_parameters.OPERATING_CONDITIONS.INFLPRES\n</code></pre> Source code in <code>src\\usmlap\\vehicle\\tyre\\tir.py</code> <pre><code>class TIRParameters(BaseModel):\n    \"\"\"\n    Tyre parameters specified in a .TIR file.\n\n    For ease of use, parameters are split into groups.\n\n    Values can be accessed using dot notation:\n\n    Attributes:\n        UNITS (Units):\n            Units used in the .TIR file.\n        MODEL (Model):\n            Parameters on the usage of the tyre model.\n        DIMENSION (Dimension):\n            Tyre dimensions.\n        OPERATING_CONDITIONS (OperatingConditions):\n            Operating conditions of the tyre.\n        INERTIA (Inertia):\n            Mass and inertia properties of the tyre and tyre belt.\n        VERTICAL (Vertical):\n            Vertical stiffness, loaded and effective rolling radius.\n        STRUCTURAL (Structural):\n            Tyre stiffness, damping, and eigenfrequencies.\n        CONTACT_PATCH (ContactPatch):\n            Contact length and obstacle enveloping parameters.\n        INFLATION_PRESSURE_RANGE (InflationPressureRange):\n            Minimum and maximum allowed inflation pressures.\n        VERTICAL_FORCE_RANGE (VerticalForceRange):\n            Minimum and maximum allowed wheel loads.\n        LONG_SLIP_RANGE (LongSlipRange):\n            Minimum and maximum valid longitudinal slips.\n        SLIP_ANGLE_RANGE (SlipAngleRange):\n            Minimum and maximum valid sideslip angles.\n        INCLINATION_ANGLE_RANGE (InclinationAngleRange):\n            Minimum and maximum valid inclination angles.\n        SCALING_COEFFICIENTS (ScalingCoefficients):\n            Magic Formula scaling factors.\n        LONGITUDINAL_COEFFICIENTS (LongitudinalCoefficients):\n            Coefficients for evaluating longitudinal force, Fx.\n        OVERTURNING_COEFFICIENTS (OverturningCoefficients):\n            Coefficients for evaluating overturning moment, Mx.\n        LATERAL_COEFFICIENTS (LateralCoefficients):\n            Coefficients for evaluating lateral force, Fy.\n        ROLLING_COEFFICIENTS (RollingCoefficients):\n            Coefficients for evaluating rolling resistance moment, My.\n        ALIGNING_COEFFICIENTS (AligningCoefficients):\n            Coefficients for evaluating self-aligning moment, Mz.\n        TURNSLIP_COEFFICIENTS (TurnslipCoefficients):\n            Coefficients for turn slip, affecting all forces and moments.\n\n    Examples:\n        Load tyre parameters from a .TIR file `Example Tyre.tir`,\n        and get the inflation pressure of the tyre (`INFLPRES`).\n\n        &gt;&gt;&gt; tir_parameters = TIRParameters.from_file(\"Example Tyre.tir\")\n        &gt;&gt;&gt; inflation_pressure = tir_parameters.OPERATING_CONDITIONS.INFLPRES\n    \"\"\"\n\n    UNITS: Units\n    MODEL: Model\n    DIMENSION: Dimension\n    OPERATING_CONDITIONS: OperatingConditions\n    INERTIA: Inertia\n    VERTICAL: Vertical\n    STRUCTURAL: Structural\n    CONTACT_PATCH: ContactPatch\n    INFLATION_PRESSURE_RANGE: InflationPressureRange\n    VERTICAL_FORCE_RANGE: VerticalForceRange\n    LONG_SLIP_RANGE: LongSlipRange\n    SLIP_ANGLE_RANGE: SlipAngleRange\n    INCLINATION_ANGLE_RANGE: InclinationAngleRange\n    SCALING_COEFFICIENTS: ScalingCoefficients\n    LONGITUDINAL_COEFFICIENTS: LongitudinalCoefficients\n    OVERTURNING_COEFFICIENTS: OverturningCoefficients\n    LATERAL_COEFFICIENTS: LateralCoefficients\n    ROLLING_COEFFICIENTS: RollingCoefficients\n    ALIGNING_COEFFICIENTS: AligningCoefficients\n    TURNSLIP_COEFFICIENTS: TurnslipCoefficients\n\n    def __str__(self) -&gt; str:\n        return self.model_dump_json(indent=4)\n\n    @classmethod\n    def from_file(cls, filepath: str) -&gt; Self:\n        \"\"\"\n        Generate a TIRParameters object from a .TIR file.\n\n        Uses _TIRReader to parse the .TIR file into a dictionary,\n        then converts it to a TIRParameters object.\n\n        Args:\n            filepath (str):\n                Filepath to the .TIR file.\n\n        Returns:\n            self (TIRParameters):\n                A TIRParameters object.\n\n        Raises:\n            FileNotFoundError:\n                If the file is not found.\n            ValueError:\n                If an error occurs while parsing the .TIR file.\n            ValidationError:\n                If the data cannot be converted\n                into a valid `TIRParameters` object.\n        \"\"\"\n        tir_data = _TIRReader().read(filepath)\n        return cls.model_validate(tir_data)\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/tyre/tir/#usmlap.vehicle.tyre.tir.TIRParameters.from_file","title":"<code>from_file(filepath)</code>  <code>classmethod</code>","text":"<p>Generate a TIRParameters object from a .TIR file.</p> <p>Uses _TIRReader to parse the .TIR file into a dictionary, then converts it to a TIRParameters object.</p> <p>Parameters:</p> Name Type Description Default <code>filepath</code> <code>str</code> <p>Filepath to the .TIR file.</p> required <p>Returns:</p> Name Type Description <code>self</code> <code>TIRParameters</code> <p>A TIRParameters object.</p> <p>Raises:</p> Type Description <code>FileNotFoundError</code> <p>If the file is not found.</p> <code>ValueError</code> <p>If an error occurs while parsing the .TIR file.</p> <code>ValidationError</code> <p>If the data cannot be converted into a valid <code>TIRParameters</code> object.</p> Source code in <code>src\\usmlap\\vehicle\\tyre\\tir.py</code> <pre><code>@classmethod\ndef from_file(cls, filepath: str) -&gt; Self:\n    \"\"\"\n    Generate a TIRParameters object from a .TIR file.\n\n    Uses _TIRReader to parse the .TIR file into a dictionary,\n    then converts it to a TIRParameters object.\n\n    Args:\n        filepath (str):\n            Filepath to the .TIR file.\n\n    Returns:\n        self (TIRParameters):\n            A TIRParameters object.\n\n    Raises:\n        FileNotFoundError:\n            If the file is not found.\n        ValueError:\n            If an error occurs while parsing the .TIR file.\n        ValidationError:\n            If the data cannot be converted\n            into a valid `TIRParameters` object.\n    \"\"\"\n    tir_data = _TIRReader().read(filepath)\n    return cls.model_validate(tir_data)\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/tyre/tir/#usmlap.vehicle.tyre.tir.TurnslipCoefficients","title":"<code>TurnslipCoefficients</code>","text":"<p>               Bases: <code>_ParameterGroup</code></p> <p>Coefficients for turn slip, affecting all forces and moments.</p> <p>Attributes:</p> Name Type Description <code>PDXP1</code> <code>Optional[float]</code> <p>Peak Fx reduction due to spin parameter.</p> <code>PDXP2</code> <code>Optional[float]</code> <p>Peak Fx reduction due to spin with varying load parameter.</p> <code>PDXP3</code> <code>Optional[float]</code> <p>Peak Fx reduction due to spin with kappa parameter.</p> <code>PKYP1</code> <code>Optional[float]</code> <p>Cornering stiffness reduction due to spin.</p> <code>PDYP1</code> <code>Optional[float]</code> <p>Peak Fy reduction due to spin parameter.</p> <code>PDYP2</code> <code>Optional[float]</code> <p>Peak Fy reduction due to spin with varying load parameter.</p> <code>PDYP3</code> <code>Optional[float]</code> <p>Peak Fy reduction due to spin with alpha parameter.</p> <code>PDYP4</code> <code>Optional[float]</code> <p>Peak Fy reduction due to square root of spin parameter.</p> <code>PHYP1</code> <code>Optional[float]</code> <p>Fy-alpha curve lateral shift limitation.</p> <code>PHYP2</code> <code>Optional[float]</code> <p>Fy-alpha curve maximum lateral shift parameter.</p> <code>PHYP3</code> <code>Optional[float]</code> <p>Fy-alpha curve maximum lateral shift varying with load parameter.</p> <code>PHYP4</code> <code>Optional[float]</code> <p>Fy-alpha curve maximum lateral shift parameter.</p> <code>PECP1</code> <code>Optional[float]</code> <p>Camber w.r.t. spin reduction factor parameter in camber stiffness.</p> <code>PECP2</code> <code>Optional[float]</code> <p>Camber w.r.t. spin reduction factor varying with load parameter in camber stiffness.</p> <code>QDTP1</code> <code>Optional[float]</code> <p>Pneumatic trail reduction factor due to turn slip parameter.</p> <code>QCRP1</code> <code>Optional[float]</code> <p>Turning moment at constant turning and zero forward speed parameter.</p> <code>QCRP2</code> <code>Optional[float]</code> <p>Turn slip moment (at alpha=90deg) parameter for increase with spin.</p> <code>QBRP1</code> <code>Optional[float]</code> <p>Residual (spin) torque reduction factor parameter due to side slip.</p> <code>QDRP1</code> <code>Optional[float]</code> <p>Turn slip moment peak magnitude parameter.</p> Source code in <code>src\\usmlap\\vehicle\\tyre\\tir.py</code> <pre><code>class TurnslipCoefficients(_ParameterGroup):\n    \"\"\"\n    Coefficients for turn slip, affecting all forces and moments.\n\n    Attributes:\n        PDXP1 (Optional[float]):\n            Peak Fx reduction due to spin parameter.\n        PDXP2 (Optional[float]):\n            Peak Fx reduction due to spin with varying load parameter.\n        PDXP3 (Optional[float]):\n            Peak Fx reduction due to spin with kappa parameter.\n        PKYP1 (Optional[float]):\n            Cornering stiffness reduction due to spin.\n        PDYP1 (Optional[float]):\n            Peak Fy reduction due to spin parameter.\n        PDYP2 (Optional[float]):\n            Peak Fy reduction due to spin with varying load parameter.\n        PDYP3 (Optional[float]):\n            Peak Fy reduction due to spin with alpha parameter.\n        PDYP4 (Optional[float]):\n            Peak Fy reduction due to square root of spin parameter.\n        PHYP1 (Optional[float]):\n            Fy-alpha curve lateral shift limitation.\n        PHYP2 (Optional[float]):\n            Fy-alpha curve maximum lateral shift parameter.\n        PHYP3 (Optional[float]):\n            Fy-alpha curve maximum lateral shift varying with load parameter.\n        PHYP4 (Optional[float]):\n            Fy-alpha curve maximum lateral shift parameter.\n        PECP1 (Optional[float]):\n            Camber w.r.t. spin reduction factor parameter in camber stiffness.\n        PECP2 (Optional[float]):\n            Camber w.r.t. spin reduction factor\n            varying with load parameter in camber stiffness.\n        QDTP1 (Optional[float]):\n            Pneumatic trail reduction factor due to turn slip parameter.\n        QCRP1 (Optional[float]):\n            Turning moment at constant turning and zero forward speed parameter.\n        QCRP2 (Optional[float]):\n            Turn slip moment (at alpha=90deg) parameter for increase with spin.\n        QBRP1 (Optional[float]):\n            Residual (spin) torque reduction factor parameter due to side slip.\n        QDRP1 (Optional[float]):\n            Turn slip moment peak magnitude parameter.\n    \"\"\"\n\n    PDXP1: Optional[float] = None\n    PDXP2: Optional[float] = None\n    PDXP3: Optional[float] = None\n    PKYP1: Optional[float] = None\n    PDYP1: Optional[float] = None\n    PDYP2: Optional[float] = None\n    PDYP3: Optional[float] = None\n    PDYP4: Optional[float] = None\n    PHYP1: Optional[float] = None\n    PHYP2: Optional[float] = None\n    PHYP3: Optional[float] = None\n    PHYP4: Optional[float] = None\n    PECP1: Optional[float] = None\n    PECP2: Optional[float] = None\n    QDTP1: Optional[float] = None\n    QCRP1: Optional[float] = None\n    QCRP2: Optional[float] = None\n    QBRP1: Optional[float] = None\n    QDRP1: Optional[float] = None\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/tyre/tir/#usmlap.vehicle.tyre.tir.Units","title":"<code>Units</code>","text":"<p>               Bases: <code>_ParameterGroup</code></p> <p>Units used in the .TIR file.</p> <p>Attributes:</p> Name Type Description <code>LENGTH</code> <code>str</code> <p>Length units (default: \"meter\").</p> <code>FORCE</code> <code>str</code> <p>Force units (default: \"newton\").</p> <code>ANGLE</code> <code>str</code> <p>Angle units (default: \"radians\").</p> <code>MASS</code> <code>str</code> <p>Mass units (default: \"kg\").</p> <code>TIME</code> <code>str</code> <p>Time units (default: \"second\").</p> Source code in <code>src\\usmlap\\vehicle\\tyre\\tir.py</code> <pre><code>class Units(_ParameterGroup):\n    \"\"\"\n    Units used in the .TIR file.\n\n    Attributes:\n        LENGTH: Length units (default: \"meter\").\n        FORCE: Force units (default: \"newton\").\n        ANGLE: Angle units (default: \"radians\").\n        MASS: Mass units (default: \"kg\").\n        TIME: Time units (default: \"second\").\n    \"\"\"\n\n    LENGTH: str\n    FORCE: str\n    ANGLE: str\n    MASS: str\n    TIME: str\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/tyre/tir/#usmlap.vehicle.tyre.tir.Vertical","title":"<code>Vertical</code>","text":"<p>               Bases: <code>_ParameterGroup</code></p> <p>Vertical stiffness, loaded and effective rolling radius.</p> <p>Attributes:</p> Name Type Description <code>FNOMIN</code> <code>Optional[float]</code> <p>Nominal wheel load.</p> <code>VERTICAL_STIFFNESS</code> <code>Optional[float]</code> <p>tyre vertical stiffness.</p> <code>VERTICAL_DAMPING</code> <code>Optional[float]</code> <p>tyre vertical damping.</p> <code>MC_CONTOUR_A</code> <code>Optional[float]</code> <p>Motorcycle contour ellipse A.</p> <code>MC_CONTOUR_B</code> <code>Optional[float]</code> <p>Motorcycle contour ellipse B.</p> <code>BREFF</code> <code>Optional[float]</code> <p>Low load stiffness of effective rolling radius.</p> <code>DREFF</code> <code>Optional[float]</code> <p>Peak value of effective rolling radius.</p> <code>FREFF</code> <code>Optional[float]</code> <p>High load stiffness of effective rolling radius.</p> <code>Q_RE0</code> <code>Optional[float]</code> <p>Ratio of free tyre radius with nominal tyre radius.</p> <code>Q_V1</code> <code>Optional[float]</code> <p>tyre radius increase with speed.</p> <code>Q_V2</code> <code>Optional[float]</code> <p>Vertical stiffness increase with speed.</p> <code>Q_FZ2</code> <code>Optional[float]</code> <p>Quadratic term in load vs. deflection.</p> <code>Q_FCX</code> <code>Optional[float]</code> <p>Longitudinal force influence on vertical stiffness.</p> <code>Q_FCY</code> <code>Optional[float]</code> <p>Lateral force influence on vertical stiffness.</p> <code>Q_FCY2</code> <code>Optional[float]</code> <p>Explicit load dependency for including the lateral force influence on vertical stiffness.</p> <code>Q_CAM</code> <code>Optional[float]</code> <p>Stiffness reduction due to camber.</p> <code>Q_CAM1</code> <code>Optional[float]</code> <p>Linear load dependent camber angle influence on vertical stiffness.</p> <code>Q_CAM2</code> <code>Optional[float]</code> <p>Quadratic load dependent camber angle influence on vertical stiffness.</p> <code>Q_CAM3</code> <code>Optional[float]</code> <p>Linear load and camber angle dependent reduction on vertical stiffness.</p> <code>Q_FYS1</code> <code>Optional[float]</code> <p>Combined camber angle and side slip angle effect on vertical stiffness (constant).</p> <code>Q_FYS2</code> <code>Optional[float]</code> <p>Combined camber angle and side slip angle linear effect on vertical stiffness.</p> <code>Q_FYS3</code> <code>Optional[float]</code> <p>Combined camber angle and side slip angle quadratic effect on vertical stiffness.</p> <code>PFZ1</code> <code>Optional[float]</code> <p>Pressure effect on vertical stiffness.</p> <code>BOTTOM_OFFST</code> <code>Optional[float]</code> <p>Distance to rim when bottoming starts to occur.</p> <code>BOTTOM_STIFF</code> <code>Optional[float]</code> <p>Vertical stiffness of bottomed tyre.</p> Source code in <code>src\\usmlap\\vehicle\\tyre\\tir.py</code> <pre><code>class Vertical(_ParameterGroup):\n    \"\"\"\n    Vertical stiffness, loaded and effective rolling radius.\n\n    Attributes:\n        FNOMIN (Optional[float]):\n            Nominal wheel load.\n        VERTICAL_STIFFNESS (Optional[float]):\n            tyre vertical stiffness.\n        VERTICAL_DAMPING (Optional[float]):\n            tyre vertical damping.\n        MC_CONTOUR_A (Optional[float]):\n            Motorcycle contour ellipse A.\n        MC_CONTOUR_B (Optional[float]):\n            Motorcycle contour ellipse B.\n        BREFF (Optional[float]):\n            Low load stiffness of effective rolling radius.\n        DREFF (Optional[float]):\n            Peak value of effective rolling radius.\n        FREFF (Optional[float]):\n            High load stiffness of effective rolling radius.\n        Q_RE0 (Optional[float]):\n            Ratio of free tyre radius with nominal tyre radius.\n        Q_V1 (Optional[float]):\n            tyre radius increase with speed.\n        Q_V2 (Optional[float]):\n            Vertical stiffness increase with speed.\n        Q_FZ2 (Optional[float]):\n            Quadratic term in load vs. deflection.\n        Q_FCX (Optional[float]):\n            Longitudinal force influence on vertical stiffness.\n        Q_FCY (Optional[float]):\n            Lateral force influence on vertical stiffness.\n        Q_FCY2 (Optional[float]):\n            Explicit load dependency for including\n            the lateral force influence on vertical stiffness.\n        Q_CAM (Optional[float]):\n            Stiffness reduction due to camber.\n        Q_CAM1 (Optional[float]):\n            Linear load dependent camber angle\n            influence on vertical stiffness.\n        Q_CAM2 (Optional[float]):\n            Quadratic load dependent camber angle\n            influence on vertical stiffness.\n        Q_CAM3 (Optional[float]):\n            Linear load and camber angle dependent\n            reduction on vertical stiffness.\n        Q_FYS1 (Optional[float]):\n            Combined camber angle and side slip angle\n            effect on vertical stiffness (constant).\n        Q_FYS2 (Optional[float]):\n            Combined camber angle and side slip angle\n            linear effect on vertical stiffness.\n        Q_FYS3 (Optional[float]):\n            Combined camber angle and side slip angle\n            quadratic effect on vertical stiffness.\n        PFZ1 (Optional[float]):\n            Pressure effect on vertical stiffness.\n        BOTTOM_OFFST (Optional[float]):\n            Distance to rim when bottoming starts to occur.\n        BOTTOM_STIFF (Optional[float]):\n            Vertical stiffness of bottomed tyre.\n    \"\"\"\n\n    FNOMIN: Optional[float] = None\n    VERTICAL_STIFFNESS: Optional[float] = None\n    VERTICAL_DAMPING: Optional[float] = None\n    MC_CONTOUR_A: Optional[float] = None\n    MC_CONTOUR_B: Optional[float] = None\n    BREFF: Optional[float] = None\n    DREFF: Optional[float] = None\n    FREFF: Optional[float] = None\n    Q_RE0: Optional[float] = None\n    Q_V1: Optional[float] = None\n    Q_V2: Optional[float] = None\n    Q_FZ2: Optional[float] = None\n    Q_FCX: Optional[float] = None\n    Q_FCY: Optional[float] = None\n    Q_FCY2: Optional[float] = None\n    Q_CAM: Optional[float] = None\n    Q_CAM1: Optional[float] = None\n    Q_CAM2: Optional[float] = None\n    Q_CAM3: Optional[float] = None\n    Q_FYS1: Optional[float] = None\n    Q_FYS2: Optional[float] = None\n    Q_FYS3: Optional[float] = None\n    PFZ1: Optional[float] = None\n    BOTTOM_OFFST: Optional[float] = None\n    BOTTOM_STIFF: Optional[float] = None\n</code></pre>"},{"location":"autoapi/usmlap/vehicle/tyre/tir/#usmlap.vehicle.tyre.tir.VerticalForceRange","title":"<code>VerticalForceRange</code>","text":"<p>               Bases: <code>_ParameterGroup</code></p> <p>Minimum and maximum allowed wheel loads.</p> <p>Attributes:</p> Name Type Description <code>FZMIN</code> <code>Optional[float]</code> <p>Minimum allowed wheel load.</p> <code>FZMAX</code> <code>Optional[float]</code> <p>Maximum allowed wheel load.</p> Source code in <code>src\\usmlap\\vehicle\\tyre\\tir.py</code> <pre><code>class VerticalForceRange(_ParameterGroup):\n    \"\"\"\n    Minimum and maximum allowed wheel loads.\n\n    Attributes:\n        FZMIN (Optional[float]):\n            Minimum allowed wheel load.\n        FZMAX (Optional[float]):\n            Maximum allowed wheel load.\n    \"\"\"\n\n    FZMIN: Optional[float] = None\n    FZMAX: Optional[float] = None\n</code></pre>"}]}